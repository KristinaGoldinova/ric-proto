syntax = "proto3";

package ric.smpp;

option go_package = "./ric-smpp;ricsmpp";

service SMPP {
  rpc Send(SendRequest) returns (SendResponse);
  rpc Status(StatusRequest) returns (StatusResponse);
  rpc GatewayInfo(GatewayInfoRequest) returns (GatewayInfoResponse);
}

message UserContext {
  string group_id = 1;
  string user_id = 2;
  string span_id = 3;
}

message SendRequest {
  UserContext ctx = 1;
  string gateway_id = 2;
  string phone = 3;
  string message = 4;
}

message SendResponse {
  string message_id = 1;
}

message StatusRequest {
  string gateway_id = 1;
  string message_id = 2;
}

message StatusResponse {
  enum State {
    UNKNOWN = 0;
    SCHEDULE = 1;
    SEND_ERROR = 2;
    MAX_RETRIES_EXCEEDED = 3;
    SENT = 4;
    ERROR = 5;
  }
  message SMPPStatus {
    string msg_id = 1;
    string msg_state = 2;
    string final_date = 3;
    int32 err_code = 4;
  }
  State state = 1;
  string description = 2;
  SMPPStatus smpp_status = 3;
}

message GatewayInfoRequest {
  string gateway_id = 1;
}

message GatewayInfoResponse {
  bool online = 1;
  int64 uptime = 2;
}
