name: Build compiler

on:
  push:
    paths:
      - Dockerfile
      - package.json
      - package-lock.json
      - .github/workflows/build_compiler.yaml
    branches:
      - master
  schedule:
    - cron: '0 7 * * SAT'

jobs:
  build_compiler:
    name: Build compiler
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
      - name: login to registry
        run:  echo ${{ secrets.GITHUB_TOKEN }} | docker login docker.pkg.github.com -u ${{ github.actor }} --password-stdin
      - name: pull cache
        run: |
          docker pull docker.pkg.github.com/rightech/ric-proto/cmp-builder:latest || true
          docker pull docker.pkg.github.com/rightech/ric-proto/compiler:latest || true
      - name: build image
        run: |
          docker build --pull \
            -t docker.pkg.github.com/rightech/ric-proto/cmp-builder:latest \
            --cache-from docker.pkg.github.com/rightech/ric-proto/cmp-builder:latest \
            --target builder .
          docker build --pull \
            -t docker.pkg.github.com/rightech/ric-proto/compiler:latest \
            -t rightechiot/ric-proto-compiler:latest \
            --cache-from docker.pkg.github.com/rightech/ric-proto/cmp-builder:latest \
            --cache-from docker.pkg.github.com/rightech/ric-proto/compiler:latest .
      - name: push image
        run: |
          docker push docker.pkg.github.com/rightech/ric-proto/compiler:latest
          docker push docker.pkg.github.com/rightech/ric-proto/cmp-builder:latest
      - name: login to DockerHub
        run: echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login -u ${{ secrets.DOCKERHUB_USER }} --password-stdin
      - name: push to DockerHub
        run: docker push rightechiot/ric-proto-compiler:latest
  compile:
    name: Compile
    needs: build_compiler
    runs-on: ubuntu-18.04
    steps:
      - name: trigger event
        run: |
          curl --request POST \
            --url https://api.github.com/repos/${{ github.repository }}/dispatches \
            --header 'authorization: Bearer ${{ secrets.REPO_ACCESS_TOKEN }}' \
            --header 'content-type: application/json' \
            --data '{
                "event_type":"After image update",
                "client_payload":{
                  "author_name":'$(jq ".head_commit.author.name" $GITHUB_EVENT_PATH)',
                  "author_email":'$(jq ".head_commit.author.email" $GITHUB_EVENT_PATH)'
                }
              }'
