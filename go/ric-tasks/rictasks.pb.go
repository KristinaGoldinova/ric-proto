// Code generated by protoc-gen-go. DO NOT EDIT.
// source: ric-tasks/rictasks.proto

package rictasks

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	wrappers "github.com/golang/protobuf/ptypes/wrappers"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Task_Status int32

const (
	Task_INVALID  Task_Status = 0
	Task_CREATED  Task_Status = 1
	Task_ASSIGNED Task_Status = 2
	Task_IN_WORK  Task_Status = 3
	Task_CLOSED   Task_Status = 4
)

var Task_Status_name = map[int32]string{
	0: "INVALID",
	1: "CREATED",
	2: "ASSIGNED",
	3: "IN_WORK",
	4: "CLOSED",
}

var Task_Status_value = map[string]int32{
	"INVALID":  0,
	"CREATED":  1,
	"ASSIGNED": 2,
	"IN_WORK":  3,
	"CLOSED":   4,
}

func (x Task_Status) String() string {
	return proto.EnumName(Task_Status_name, int32(x))
}

func (Task_Status) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_24bc245c10750061, []int{4, 0}
}

type MasterTask_Constrain int32

const (
	MasterTask_INVALID   MasterTask_Constrain = 0
	MasterTask_UNORDERED MasterTask_Constrain = 1
	MasterTask_ORDERED   MasterTask_Constrain = 2
)

var MasterTask_Constrain_name = map[int32]string{
	0: "INVALID",
	1: "UNORDERED",
	2: "ORDERED",
}

var MasterTask_Constrain_value = map[string]int32{
	"INVALID":   0,
	"UNORDERED": 1,
	"ORDERED":   2,
}

func (x MasterTask_Constrain) String() string {
	return proto.EnumName(MasterTask_Constrain_name, int32(x))
}

func (MasterTask_Constrain) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_24bc245c10750061, []int{6, 0}
}

type MasterTask_Priority int32

const (
	MasterTask_UNDEFINED MasterTask_Priority = 0
	MasterTask_LOW       MasterTask_Priority = 1
	MasterTask_NORMAL    MasterTask_Priority = 2
	MasterTask_HIGH      MasterTask_Priority = 3
)

var MasterTask_Priority_name = map[int32]string{
	0: "UNDEFINED",
	1: "LOW",
	2: "NORMAL",
	3: "HIGH",
}

var MasterTask_Priority_value = map[string]int32{
	"UNDEFINED": 0,
	"LOW":       1,
	"NORMAL":    2,
	"HIGH":      3,
}

func (x MasterTask_Priority) String() string {
	return proto.EnumName(MasterTask_Priority_name, int32(x))
}

func (MasterTask_Priority) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_24bc245c10750061, []int{6, 1}
}

type ObjectId struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *ObjectId) Reset()         { *m = ObjectId{} }
func (m *ObjectId) String() string { return proto.CompactTextString(m) }
func (*ObjectId) ProtoMessage()    {}
func (*ObjectId) Descriptor() ([]byte, []int) {
	return fileDescriptor_24bc245c10750061, []int{0}
}

func (m *ObjectId) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ObjectId.Unmarshal(m, b)
}
func (m *ObjectId) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ObjectId.Marshal(b, m, deterministic)
}
func (m *ObjectId) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ObjectId.Merge(m, src)
}
func (m *ObjectId) XXX_Size() int {
	return xxx_messageInfo_ObjectId.Size(m)
}
func (m *ObjectId) XXX_DiscardUnknown() {
	xxx_messageInfo_ObjectId.DiscardUnknown(m)
}

var xxx_messageInfo_ObjectId proto.InternalMessageInfo

func (m *ObjectId) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type TaskId struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *TaskId) Reset()         { *m = TaskId{} }
func (m *TaskId) String() string { return proto.CompactTextString(m) }
func (*TaskId) ProtoMessage()    {}
func (*TaskId) Descriptor() ([]byte, []int) {
	return fileDescriptor_24bc245c10750061, []int{1}
}

func (m *TaskId) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TaskId.Unmarshal(m, b)
}
func (m *TaskId) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TaskId.Marshal(b, m, deterministic)
}
func (m *TaskId) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TaskId.Merge(m, src)
}
func (m *TaskId) XXX_Size() int {
	return xxx_messageInfo_TaskId.Size(m)
}
func (m *TaskId) XXX_DiscardUnknown() {
	xxx_messageInfo_TaskId.DiscardUnknown(m)
}

var xxx_messageInfo_TaskId proto.InternalMessageInfo

func (m *TaskId) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type Location struct {
	Lat    float64 `protobuf:"fixed64,1,opt,name=lat,proto3" json:"lat,omitempty"`
	Lng    float64 `protobuf:"fixed64,2,opt,name=lng,proto3" json:"lng,omitempty"`
	Radius float64 `protobuf:"fixed64,3,opt,name=radius,proto3" json:"radius,omitempty"`
	// @inject_tag: bson:",omitempty"
	Address string `protobuf:"bytes,4,opt,name=address,proto3" json:"address,omitempty" bson:",omitempty"`
	// @inject_tag: bson:",omitempty"
	Indoor               *IndoorLocation `protobuf:"bytes,5,opt,name=indoor,proto3" json:"indoor,omitempty" bson:",omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-" bson:"-"`
	XXX_unrecognized     []byte          `json:"-" bson:"-"`
	XXX_sizecache        int32           `json:"-" bson:"-"`
}

func (m *Location) Reset()         { *m = Location{} }
func (m *Location) String() string { return proto.CompactTextString(m) }
func (*Location) ProtoMessage()    {}
func (*Location) Descriptor() ([]byte, []int) {
	return fileDescriptor_24bc245c10750061, []int{2}
}

func (m *Location) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Location.Unmarshal(m, b)
}
func (m *Location) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Location.Marshal(b, m, deterministic)
}
func (m *Location) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Location.Merge(m, src)
}
func (m *Location) XXX_Size() int {
	return xxx_messageInfo_Location.Size(m)
}
func (m *Location) XXX_DiscardUnknown() {
	xxx_messageInfo_Location.DiscardUnknown(m)
}

var xxx_messageInfo_Location proto.InternalMessageInfo

func (m *Location) GetLat() float64 {
	if m != nil {
		return m.Lat
	}
	return 0
}

func (m *Location) GetLng() float64 {
	if m != nil {
		return m.Lng
	}
	return 0
}

func (m *Location) GetRadius() float64 {
	if m != nil {
		return m.Radius
	}
	return 0
}

func (m *Location) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *Location) GetIndoor() *IndoorLocation {
	if m != nil {
		return m.Indoor
	}
	return nil
}

type IndoorLocation struct {
	X                    float64  `protobuf:"fixed64,1,opt,name=x,proto3" json:"x,omitempty"`
	Y                    float64  `protobuf:"fixed64,2,opt,name=y,proto3" json:"y,omitempty"`
	Z                    float64  `protobuf:"fixed64,3,opt,name=z,proto3" json:"z,omitempty"`
	Radius               float64  `protobuf:"fixed64,4,opt,name=radius,proto3" json:"radius,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *IndoorLocation) Reset()         { *m = IndoorLocation{} }
func (m *IndoorLocation) String() string { return proto.CompactTextString(m) }
func (*IndoorLocation) ProtoMessage()    {}
func (*IndoorLocation) Descriptor() ([]byte, []int) {
	return fileDescriptor_24bc245c10750061, []int{3}
}

func (m *IndoorLocation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IndoorLocation.Unmarshal(m, b)
}
func (m *IndoorLocation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IndoorLocation.Marshal(b, m, deterministic)
}
func (m *IndoorLocation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IndoorLocation.Merge(m, src)
}
func (m *IndoorLocation) XXX_Size() int {
	return xxx_messageInfo_IndoorLocation.Size(m)
}
func (m *IndoorLocation) XXX_DiscardUnknown() {
	xxx_messageInfo_IndoorLocation.DiscardUnknown(m)
}

var xxx_messageInfo_IndoorLocation proto.InternalMessageInfo

func (m *IndoorLocation) GetX() float64 {
	if m != nil {
		return m.X
	}
	return 0
}

func (m *IndoorLocation) GetY() float64 {
	if m != nil {
		return m.Y
	}
	return 0
}

func (m *IndoorLocation) GetZ() float64 {
	if m != nil {
		return m.Z
	}
	return 0
}

func (m *IndoorLocation) GetRadius() float64 {
	if m != nil {
		return m.Radius
	}
	return 0
}

type Task struct {
	Id *TaskId `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// @inject_tag: bson:",omitempty"
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty" bson:",omitempty"`
	// @inject_tag: bson:",omitempty"
	Kind string `protobuf:"bytes,3,opt,name=kind,proto3" json:"kind,omitempty" bson:",omitempty"`
	// @inject_tag: bson:",omitempty"
	Description string      `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty" bson:",omitempty"`
	Status      Task_Status `protobuf:"varint,5,opt,name=status,proto3,enum=ric.tasks.Task_Status" json:"status,omitempty"`
	// @inject_tag: bson:",omitempty"
	Object *ObjectId `protobuf:"bytes,6,opt,name=object,proto3" json:"object,omitempty" bson:",omitempty"`
	// @inject_tag: bson:",omitempty"
	Begin *Location `protobuf:"bytes,7,opt,name=begin,proto3" json:"begin,omitempty" bson:",omitempty"`
	// @inject_tag: bson:",omitempty"
	End *Location `protobuf:"bytes,8,opt,name=end,proto3" json:"end,omitempty" bson:",omitempty"`
	// @inject_tag: bson:"created_at"
	CreatedAt int64 `protobuf:"varint,9,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty" bson:"created_at"`
	// @inject_tag: bson:",omitempty"
	Deadlines []*Deadline `protobuf:"bytes,10,rep,name=deadlines,proto3" json:"deadlines,omitempty" bson:",omitempty"`
	// @inject_tag: bson:",omitempty"
	Owner *ObjectId `protobuf:"bytes,11,opt,name=owner,proto3" json:"owner,omitempty" bson:",omitempty"`
	// @inject_tag: bson:",omitempty"
	Success *wrappers.BoolValue `protobuf:"bytes,12,opt,name=success,proto3" json:"success,omitempty" bson:",omitempty"`
	// @inject_tag: bson:",omitempty"
	Comment string `protobuf:"bytes,13,opt,name=comment,proto3" json:"comment,omitempty" bson:",omitempty"`
	// @inject_tag: bson:",omitempty"
	Files []string `protobuf:"bytes,14,rep,name=files,proto3" json:"files,omitempty" bson:",omitempty"`
	// @inject_tag: bson:",omitempty"
	Assignee             *ObjectId `protobuf:"bytes,15,opt,name=assignee,proto3" json:"assignee,omitempty" bson:",omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-" bson:"-"`
	XXX_unrecognized     []byte    `json:"-" bson:"-"`
	XXX_sizecache        int32     `json:"-" bson:"-"`
}

func (m *Task) Reset()         { *m = Task{} }
func (m *Task) String() string { return proto.CompactTextString(m) }
func (*Task) ProtoMessage()    {}
func (*Task) Descriptor() ([]byte, []int) {
	return fileDescriptor_24bc245c10750061, []int{4}
}

func (m *Task) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Task.Unmarshal(m, b)
}
func (m *Task) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Task.Marshal(b, m, deterministic)
}
func (m *Task) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Task.Merge(m, src)
}
func (m *Task) XXX_Size() int {
	return xxx_messageInfo_Task.Size(m)
}
func (m *Task) XXX_DiscardUnknown() {
	xxx_messageInfo_Task.DiscardUnknown(m)
}

var xxx_messageInfo_Task proto.InternalMessageInfo

func (m *Task) GetId() *TaskId {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Task) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Task) GetKind() string {
	if m != nil {
		return m.Kind
	}
	return ""
}

func (m *Task) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Task) GetStatus() Task_Status {
	if m != nil {
		return m.Status
	}
	return Task_INVALID
}

func (m *Task) GetObject() *ObjectId {
	if m != nil {
		return m.Object
	}
	return nil
}

func (m *Task) GetBegin() *Location {
	if m != nil {
		return m.Begin
	}
	return nil
}

func (m *Task) GetEnd() *Location {
	if m != nil {
		return m.End
	}
	return nil
}

func (m *Task) GetCreatedAt() int64 {
	if m != nil {
		return m.CreatedAt
	}
	return 0
}

func (m *Task) GetDeadlines() []*Deadline {
	if m != nil {
		return m.Deadlines
	}
	return nil
}

func (m *Task) GetOwner() *ObjectId {
	if m != nil {
		return m.Owner
	}
	return nil
}

func (m *Task) GetSuccess() *wrappers.BoolValue {
	if m != nil {
		return m.Success
	}
	return nil
}

func (m *Task) GetComment() string {
	if m != nil {
		return m.Comment
	}
	return ""
}

func (m *Task) GetFiles() []string {
	if m != nil {
		return m.Files
	}
	return nil
}

func (m *Task) GetAssignee() *ObjectId {
	if m != nil {
		return m.Assignee
	}
	return nil
}

type Deadline struct {
	Timestamp int64 `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// number of milliseconds before deadline when service should send
	// notification
	// @inject_tag: bson:",omitempty"
	NotifyUntil          *wrappers.Int64Value `protobuf:"bytes,2,opt,name=notify_until,json=notifyUntil,proto3" json:"notify_until,omitempty" bson:",omitempty"`
	Status               Task_Status          `protobuf:"varint,3,opt,name=status,proto3,enum=ric.tasks.Task_Status" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-" bson:"-"`
	XXX_unrecognized     []byte               `json:"-" bson:"-"`
	XXX_sizecache        int32                `json:"-" bson:"-"`
}

func (m *Deadline) Reset()         { *m = Deadline{} }
func (m *Deadline) String() string { return proto.CompactTextString(m) }
func (*Deadline) ProtoMessage()    {}
func (*Deadline) Descriptor() ([]byte, []int) {
	return fileDescriptor_24bc245c10750061, []int{5}
}

func (m *Deadline) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Deadline.Unmarshal(m, b)
}
func (m *Deadline) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Deadline.Marshal(b, m, deterministic)
}
func (m *Deadline) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Deadline.Merge(m, src)
}
func (m *Deadline) XXX_Size() int {
	return xxx_messageInfo_Deadline.Size(m)
}
func (m *Deadline) XXX_DiscardUnknown() {
	xxx_messageInfo_Deadline.DiscardUnknown(m)
}

var xxx_messageInfo_Deadline proto.InternalMessageInfo

func (m *Deadline) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *Deadline) GetNotifyUntil() *wrappers.Int64Value {
	if m != nil {
		return m.NotifyUntil
	}
	return nil
}

func (m *Deadline) GetStatus() Task_Status {
	if m != nil {
		return m.Status
	}
	return Task_INVALID
}

type MasterTask struct {
	// @inject_tag: bson:"_id"
	Oid *ObjectId `protobuf:"bytes,1,opt,name=oid,proto3" json:"oid,omitempty" bson:"_id"`
	// @inject_tag: bson:",omitempty"
	Owner *ObjectId `protobuf:"bytes,2,opt,name=owner,proto3" json:"owner,omitempty" bson:",omitempty"`
	// @inject_tag: bson:",omitempty"
	Group     *ObjectId            `protobuf:"bytes,3,opt,name=group,proto3" json:"group,omitempty" bson:",omitempty"`
	Subtasks  []*Task              `protobuf:"bytes,4,rep,name=subtasks,proto3" json:"subtasks,omitempty"`
	Constrain MasterTask_Constrain `protobuf:"varint,5,opt,name=constrain,proto3,enum=ric.tasks.MasterTask_Constrain" json:"constrain,omitempty"`
	// @inject_tag: bson:",omitempty"
	Tags     []string            `protobuf:"bytes,6,rep,name=tags,proto3" json:"tags,omitempty" bson:",omitempty"`
	Priority MasterTask_Priority `protobuf:"varint,7,opt,name=priority,proto3,enum=ric.tasks.MasterTask_Priority" json:"priority,omitempty"`
	Time     int64               `protobuf:"varint,8,opt,name=time,proto3" json:"time,omitempty"`
	// @inject_tag: bson:",omitempty"
	Object               *ObjectId `protobuf:"bytes,9,opt,name=object,proto3" json:"object,omitempty" bson:",omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-" bson:"-"`
	XXX_unrecognized     []byte    `json:"-" bson:"-"`
	XXX_sizecache        int32     `json:"-" bson:"-"`
}

func (m *MasterTask) Reset()         { *m = MasterTask{} }
func (m *MasterTask) String() string { return proto.CompactTextString(m) }
func (*MasterTask) ProtoMessage()    {}
func (*MasterTask) Descriptor() ([]byte, []int) {
	return fileDescriptor_24bc245c10750061, []int{6}
}

func (m *MasterTask) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MasterTask.Unmarshal(m, b)
}
func (m *MasterTask) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MasterTask.Marshal(b, m, deterministic)
}
func (m *MasterTask) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MasterTask.Merge(m, src)
}
func (m *MasterTask) XXX_Size() int {
	return xxx_messageInfo_MasterTask.Size(m)
}
func (m *MasterTask) XXX_DiscardUnknown() {
	xxx_messageInfo_MasterTask.DiscardUnknown(m)
}

var xxx_messageInfo_MasterTask proto.InternalMessageInfo

func (m *MasterTask) GetOid() *ObjectId {
	if m != nil {
		return m.Oid
	}
	return nil
}

func (m *MasterTask) GetOwner() *ObjectId {
	if m != nil {
		return m.Owner
	}
	return nil
}

func (m *MasterTask) GetGroup() *ObjectId {
	if m != nil {
		return m.Group
	}
	return nil
}

func (m *MasterTask) GetSubtasks() []*Task {
	if m != nil {
		return m.Subtasks
	}
	return nil
}

func (m *MasterTask) GetConstrain() MasterTask_Constrain {
	if m != nil {
		return m.Constrain
	}
	return MasterTask_INVALID
}

func (m *MasterTask) GetTags() []string {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *MasterTask) GetPriority() MasterTask_Priority {
	if m != nil {
		return m.Priority
	}
	return MasterTask_UNDEFINED
}

func (m *MasterTask) GetTime() int64 {
	if m != nil {
		return m.Time
	}
	return 0
}

func (m *MasterTask) GetObject() *ObjectId {
	if m != nil {
		return m.Object
	}
	return nil
}

type CreateRequest struct {
	MasterTask           *MasterTask `protobuf:"bytes,1,opt,name=master_task,json=masterTask,proto3" json:"master_task,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-" bson:"-"`
	XXX_unrecognized     []byte      `json:"-" bson:"-"`
	XXX_sizecache        int32       `json:"-" bson:"-"`
}

func (m *CreateRequest) Reset()         { *m = CreateRequest{} }
func (m *CreateRequest) String() string { return proto.CompactTextString(m) }
func (*CreateRequest) ProtoMessage()    {}
func (*CreateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_24bc245c10750061, []int{7}
}

func (m *CreateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateRequest.Unmarshal(m, b)
}
func (m *CreateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateRequest.Marshal(b, m, deterministic)
}
func (m *CreateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateRequest.Merge(m, src)
}
func (m *CreateRequest) XXX_Size() int {
	return xxx_messageInfo_CreateRequest.Size(m)
}
func (m *CreateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateRequest proto.InternalMessageInfo

func (m *CreateRequest) GetMasterTask() *MasterTask {
	if m != nil {
		return m.MasterTask
	}
	return nil
}

type CreateResponse struct {
	Oid                  *ObjectId `protobuf:"bytes,1,opt,name=oid,proto3" json:"oid,omitempty"`
	SubIds               []*TaskId `protobuf:"bytes,2,rep,name=sub_ids,json=subIds,proto3" json:"sub_ids,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-" bson:"-"`
	XXX_unrecognized     []byte    `json:"-" bson:"-"`
	XXX_sizecache        int32     `json:"-" bson:"-"`
}

func (m *CreateResponse) Reset()         { *m = CreateResponse{} }
func (m *CreateResponse) String() string { return proto.CompactTextString(m) }
func (*CreateResponse) ProtoMessage()    {}
func (*CreateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_24bc245c10750061, []int{8}
}

func (m *CreateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateResponse.Unmarshal(m, b)
}
func (m *CreateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateResponse.Marshal(b, m, deterministic)
}
func (m *CreateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateResponse.Merge(m, src)
}
func (m *CreateResponse) XXX_Size() int {
	return xxx_messageInfo_CreateResponse.Size(m)
}
func (m *CreateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateResponse proto.InternalMessageInfo

func (m *CreateResponse) GetOid() *ObjectId {
	if m != nil {
		return m.Oid
	}
	return nil
}

func (m *CreateResponse) GetSubIds() []*TaskId {
	if m != nil {
		return m.SubIds
	}
	return nil
}

type GetRequest struct {
	// Types that are valid to be assigned to Payload:
	//	*GetRequest_Oid
	//	*GetRequest_Tid
	Payload              isGetRequest_Payload `protobuf_oneof:"payload"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-" bson:"-"`
	XXX_unrecognized     []byte               `json:"-" bson:"-"`
	XXX_sizecache        int32                `json:"-" bson:"-"`
}

func (m *GetRequest) Reset()         { *m = GetRequest{} }
func (m *GetRequest) String() string { return proto.CompactTextString(m) }
func (*GetRequest) ProtoMessage()    {}
func (*GetRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_24bc245c10750061, []int{9}
}

func (m *GetRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRequest.Unmarshal(m, b)
}
func (m *GetRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRequest.Marshal(b, m, deterministic)
}
func (m *GetRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRequest.Merge(m, src)
}
func (m *GetRequest) XXX_Size() int {
	return xxx_messageInfo_GetRequest.Size(m)
}
func (m *GetRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetRequest proto.InternalMessageInfo

type isGetRequest_Payload interface {
	isGetRequest_Payload()
}

type GetRequest_Oid struct {
	Oid *ObjectId `protobuf:"bytes,1,opt,name=oid,proto3,oneof"`
}

type GetRequest_Tid struct {
	Tid *TaskId `protobuf:"bytes,2,opt,name=tid,proto3,oneof"`
}

func (*GetRequest_Oid) isGetRequest_Payload() {}

func (*GetRequest_Tid) isGetRequest_Payload() {}

func (m *GetRequest) GetPayload() isGetRequest_Payload {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (m *GetRequest) GetOid() *ObjectId {
	if x, ok := m.GetPayload().(*GetRequest_Oid); ok {
		return x.Oid
	}
	return nil
}

func (m *GetRequest) GetTid() *TaskId {
	if x, ok := m.GetPayload().(*GetRequest_Tid); ok {
		return x.Tid
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*GetRequest) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*GetRequest_Oid)(nil),
		(*GetRequest_Tid)(nil),
	}
}

type GetResponse struct {
	MasterTask           *MasterTask `protobuf:"bytes,1,opt,name=master_task,json=masterTask,proto3" json:"master_task,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-" bson:"-"`
	XXX_unrecognized     []byte      `json:"-" bson:"-"`
	XXX_sizecache        int32       `json:"-" bson:"-"`
}

func (m *GetResponse) Reset()         { *m = GetResponse{} }
func (m *GetResponse) String() string { return proto.CompactTextString(m) }
func (*GetResponse) ProtoMessage()    {}
func (*GetResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_24bc245c10750061, []int{10}
}

func (m *GetResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetResponse.Unmarshal(m, b)
}
func (m *GetResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetResponse.Marshal(b, m, deterministic)
}
func (m *GetResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetResponse.Merge(m, src)
}
func (m *GetResponse) XXX_Size() int {
	return xxx_messageInfo_GetResponse.Size(m)
}
func (m *GetResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetResponse proto.InternalMessageInfo

func (m *GetResponse) GetMasterTask() *MasterTask {
	if m != nil {
		return m.MasterTask
	}
	return nil
}

type DeleteRequest struct {
	// Types that are valid to be assigned to Payload:
	//	*DeleteRequest_Oid
	//	*DeleteRequest_Tid
	Payload              isDeleteRequest_Payload `protobuf_oneof:"payload"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-" bson:"-"`
	XXX_unrecognized     []byte                  `json:"-" bson:"-"`
	XXX_sizecache        int32                   `json:"-" bson:"-"`
}

func (m *DeleteRequest) Reset()         { *m = DeleteRequest{} }
func (m *DeleteRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteRequest) ProtoMessage()    {}
func (*DeleteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_24bc245c10750061, []int{11}
}

func (m *DeleteRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteRequest.Unmarshal(m, b)
}
func (m *DeleteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteRequest.Marshal(b, m, deterministic)
}
func (m *DeleteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteRequest.Merge(m, src)
}
func (m *DeleteRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteRequest.Size(m)
}
func (m *DeleteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteRequest proto.InternalMessageInfo

type isDeleteRequest_Payload interface {
	isDeleteRequest_Payload()
}

type DeleteRequest_Oid struct {
	Oid *ObjectId `protobuf:"bytes,1,opt,name=oid,proto3,oneof"`
}

type DeleteRequest_Tid struct {
	Tid *TaskId `protobuf:"bytes,2,opt,name=tid,proto3,oneof"`
}

func (*DeleteRequest_Oid) isDeleteRequest_Payload() {}

func (*DeleteRequest_Tid) isDeleteRequest_Payload() {}

func (m *DeleteRequest) GetPayload() isDeleteRequest_Payload {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (m *DeleteRequest) GetOid() *ObjectId {
	if x, ok := m.GetPayload().(*DeleteRequest_Oid); ok {
		return x.Oid
	}
	return nil
}

func (m *DeleteRequest) GetTid() *TaskId {
	if x, ok := m.GetPayload().(*DeleteRequest_Tid); ok {
		return x.Tid
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*DeleteRequest) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*DeleteRequest_Oid)(nil),
		(*DeleteRequest_Tid)(nil),
	}
}

type DeleteResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *DeleteResponse) Reset()         { *m = DeleteResponse{} }
func (m *DeleteResponse) String() string { return proto.CompactTextString(m) }
func (*DeleteResponse) ProtoMessage()    {}
func (*DeleteResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_24bc245c10750061, []int{12}
}

func (m *DeleteResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteResponse.Unmarshal(m, b)
}
func (m *DeleteResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteResponse.Marshal(b, m, deterministic)
}
func (m *DeleteResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteResponse.Merge(m, src)
}
func (m *DeleteResponse) XXX_Size() int {
	return xxx_messageInfo_DeleteResponse.Size(m)
}
func (m *DeleteResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteResponse proto.InternalMessageInfo

type UpdateRequest struct {
	MasterTask           *MasterTask `protobuf:"bytes,1,opt,name=master_task,json=masterTask,proto3" json:"master_task,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-" bson:"-"`
	XXX_unrecognized     []byte      `json:"-" bson:"-"`
	XXX_sizecache        int32       `json:"-" bson:"-"`
}

func (m *UpdateRequest) Reset()         { *m = UpdateRequest{} }
func (m *UpdateRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateRequest) ProtoMessage()    {}
func (*UpdateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_24bc245c10750061, []int{13}
}

func (m *UpdateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateRequest.Unmarshal(m, b)
}
func (m *UpdateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateRequest.Marshal(b, m, deterministic)
}
func (m *UpdateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateRequest.Merge(m, src)
}
func (m *UpdateRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateRequest.Size(m)
}
func (m *UpdateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateRequest proto.InternalMessageInfo

func (m *UpdateRequest) GetMasterTask() *MasterTask {
	if m != nil {
		return m.MasterTask
	}
	return nil
}

type UpdateResponse struct {
	MasterTask           *MasterTask `protobuf:"bytes,1,opt,name=master_task,json=masterTask,proto3" json:"master_task,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-" bson:"-"`
	XXX_unrecognized     []byte      `json:"-" bson:"-"`
	XXX_sizecache        int32       `json:"-" bson:"-"`
}

func (m *UpdateResponse) Reset()         { *m = UpdateResponse{} }
func (m *UpdateResponse) String() string { return proto.CompactTextString(m) }
func (*UpdateResponse) ProtoMessage()    {}
func (*UpdateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_24bc245c10750061, []int{14}
}

func (m *UpdateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateResponse.Unmarshal(m, b)
}
func (m *UpdateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateResponse.Marshal(b, m, deterministic)
}
func (m *UpdateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateResponse.Merge(m, src)
}
func (m *UpdateResponse) XXX_Size() int {
	return xxx_messageInfo_UpdateResponse.Size(m)
}
func (m *UpdateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateResponse proto.InternalMessageInfo

func (m *UpdateResponse) GetMasterTask() *MasterTask {
	if m != nil {
		return m.MasterTask
	}
	return nil
}

type UpdateOrderRequest struct {
	Id *ObjectId `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// new position to task id
	// if new position greater then subtasks length
	// error returned
	Positions            map[string]int32 `protobuf:"bytes,2,rep,name=positions,proto3" json:"positions,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-" bson:"-"`
	XXX_unrecognized     []byte           `json:"-" bson:"-"`
	XXX_sizecache        int32            `json:"-" bson:"-"`
}

func (m *UpdateOrderRequest) Reset()         { *m = UpdateOrderRequest{} }
func (m *UpdateOrderRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateOrderRequest) ProtoMessage()    {}
func (*UpdateOrderRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_24bc245c10750061, []int{15}
}

func (m *UpdateOrderRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateOrderRequest.Unmarshal(m, b)
}
func (m *UpdateOrderRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateOrderRequest.Marshal(b, m, deterministic)
}
func (m *UpdateOrderRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateOrderRequest.Merge(m, src)
}
func (m *UpdateOrderRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateOrderRequest.Size(m)
}
func (m *UpdateOrderRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateOrderRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateOrderRequest proto.InternalMessageInfo

func (m *UpdateOrderRequest) GetId() *ObjectId {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *UpdateOrderRequest) GetPositions() map[string]int32 {
	if m != nil {
		return m.Positions
	}
	return nil
}

type UpdateOrderResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *UpdateOrderResponse) Reset()         { *m = UpdateOrderResponse{} }
func (m *UpdateOrderResponse) String() string { return proto.CompactTextString(m) }
func (*UpdateOrderResponse) ProtoMessage()    {}
func (*UpdateOrderResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_24bc245c10750061, []int{16}
}

func (m *UpdateOrderResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateOrderResponse.Unmarshal(m, b)
}
func (m *UpdateOrderResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateOrderResponse.Marshal(b, m, deterministic)
}
func (m *UpdateOrderResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateOrderResponse.Merge(m, src)
}
func (m *UpdateOrderResponse) XXX_Size() int {
	return xxx_messageInfo_UpdateOrderResponse.Size(m)
}
func (m *UpdateOrderResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateOrderResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateOrderResponse proto.InternalMessageInfo

type ChangeStatusRequest struct {
	Id        *TaskId     `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	NewStatus Task_Status `protobuf:"varint,2,opt,name=new_status,json=newStatus,proto3,enum=ric.tasks.Task_Status" json:"new_status,omitempty"`
	// current location
	Location *Location `protobuf:"bytes,3,opt,name=location,proto3" json:"location,omitempty"`
	// required only if new_status == CLOSED
	Success              *wrappers.BoolValue `protobuf:"bytes,4,opt,name=success,proto3" json:"success,omitempty"`
	Comment              string              `protobuf:"bytes,5,opt,name=comment,proto3" json:"comment,omitempty"`
	Files                []string            `protobuf:"bytes,6,rep,name=files,proto3" json:"files,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-" bson:"-"`
	XXX_unrecognized     []byte              `json:"-" bson:"-"`
	XXX_sizecache        int32               `json:"-" bson:"-"`
}

func (m *ChangeStatusRequest) Reset()         { *m = ChangeStatusRequest{} }
func (m *ChangeStatusRequest) String() string { return proto.CompactTextString(m) }
func (*ChangeStatusRequest) ProtoMessage()    {}
func (*ChangeStatusRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_24bc245c10750061, []int{17}
}

func (m *ChangeStatusRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChangeStatusRequest.Unmarshal(m, b)
}
func (m *ChangeStatusRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChangeStatusRequest.Marshal(b, m, deterministic)
}
func (m *ChangeStatusRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChangeStatusRequest.Merge(m, src)
}
func (m *ChangeStatusRequest) XXX_Size() int {
	return xxx_messageInfo_ChangeStatusRequest.Size(m)
}
func (m *ChangeStatusRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ChangeStatusRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ChangeStatusRequest proto.InternalMessageInfo

func (m *ChangeStatusRequest) GetId() *TaskId {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *ChangeStatusRequest) GetNewStatus() Task_Status {
	if m != nil {
		return m.NewStatus
	}
	return Task_INVALID
}

func (m *ChangeStatusRequest) GetLocation() *Location {
	if m != nil {
		return m.Location
	}
	return nil
}

func (m *ChangeStatusRequest) GetSuccess() *wrappers.BoolValue {
	if m != nil {
		return m.Success
	}
	return nil
}

func (m *ChangeStatusRequest) GetComment() string {
	if m != nil {
		return m.Comment
	}
	return ""
}

func (m *ChangeStatusRequest) GetFiles() []string {
	if m != nil {
		return m.Files
	}
	return nil
}

type ChangeStatusResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *ChangeStatusResponse) Reset()         { *m = ChangeStatusResponse{} }
func (m *ChangeStatusResponse) String() string { return proto.CompactTextString(m) }
func (*ChangeStatusResponse) ProtoMessage()    {}
func (*ChangeStatusResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_24bc245c10750061, []int{18}
}

func (m *ChangeStatusResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChangeStatusResponse.Unmarshal(m, b)
}
func (m *ChangeStatusResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChangeStatusResponse.Marshal(b, m, deterministic)
}
func (m *ChangeStatusResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChangeStatusResponse.Merge(m, src)
}
func (m *ChangeStatusResponse) XXX_Size() int {
	return xxx_messageInfo_ChangeStatusResponse.Size(m)
}
func (m *ChangeStatusResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ChangeStatusResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ChangeStatusResponse proto.InternalMessageInfo

func init() {
	proto.RegisterEnum("ric.tasks.Task_Status", Task_Status_name, Task_Status_value)
	proto.RegisterEnum("ric.tasks.MasterTask_Constrain", MasterTask_Constrain_name, MasterTask_Constrain_value)
	proto.RegisterEnum("ric.tasks.MasterTask_Priority", MasterTask_Priority_name, MasterTask_Priority_value)
	proto.RegisterType((*ObjectId)(nil), "ric.tasks.ObjectId")
	proto.RegisterType((*TaskId)(nil), "ric.tasks.TaskId")
	proto.RegisterType((*Location)(nil), "ric.tasks.Location")
	proto.RegisterType((*IndoorLocation)(nil), "ric.tasks.IndoorLocation")
	proto.RegisterType((*Task)(nil), "ric.tasks.Task")
	proto.RegisterType((*Deadline)(nil), "ric.tasks.Deadline")
	proto.RegisterType((*MasterTask)(nil), "ric.tasks.MasterTask")
	proto.RegisterType((*CreateRequest)(nil), "ric.tasks.CreateRequest")
	proto.RegisterType((*CreateResponse)(nil), "ric.tasks.CreateResponse")
	proto.RegisterType((*GetRequest)(nil), "ric.tasks.GetRequest")
	proto.RegisterType((*GetResponse)(nil), "ric.tasks.GetResponse")
	proto.RegisterType((*DeleteRequest)(nil), "ric.tasks.DeleteRequest")
	proto.RegisterType((*DeleteResponse)(nil), "ric.tasks.DeleteResponse")
	proto.RegisterType((*UpdateRequest)(nil), "ric.tasks.UpdateRequest")
	proto.RegisterType((*UpdateResponse)(nil), "ric.tasks.UpdateResponse")
	proto.RegisterType((*UpdateOrderRequest)(nil), "ric.tasks.UpdateOrderRequest")
	proto.RegisterMapType((map[string]int32)(nil), "ric.tasks.UpdateOrderRequest.PositionsEntry")
	proto.RegisterType((*UpdateOrderResponse)(nil), "ric.tasks.UpdateOrderResponse")
	proto.RegisterType((*ChangeStatusRequest)(nil), "ric.tasks.ChangeStatusRequest")
	proto.RegisterType((*ChangeStatusResponse)(nil), "ric.tasks.ChangeStatusResponse")
}

func init() {
	proto.RegisterFile("ric-tasks/rictasks.proto", fileDescriptor_24bc245c10750061)
}

var fileDescriptor_24bc245c10750061 = []byte{
	// 1209 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x57, 0x51, 0x73, 0xda, 0xc6,
	0x13, 0x8f, 0x10, 0x08, 0x69, 0xb1, 0x09, 0xff, 0x4b, 0xe2, 0x51, 0xf8, 0x37, 0x0e, 0x55, 0xc7,
	0x53, 0xa7, 0x69, 0xf1, 0x84, 0xba, 0x99, 0x4c, 0xa6, 0xee, 0x8c, 0x6d, 0xa8, 0x4d, 0x4b, 0x4c,
	0xe6, 0x6c, 0x27, 0x33, 0x7d, 0x61, 0x84, 0x74, 0xa6, 0x17, 0x83, 0x44, 0x75, 0x47, 0x1d, 0xf2,
	0xd6, 0x97, 0x7e, 0x81, 0xbe, 0xb4, 0x9f, 0xa7, 0xdf, 0xa9, 0xcf, 0x9d, 0x3b, 0x9d, 0x40, 0xb2,
	0x21, 0xf6, 0xa4, 0xed, 0xdb, 0xdd, 0xed, 0x4f, 0x7b, 0xbf, 0xdb, 0xfd, 0xed, 0x2e, 0x80, 0x1d,
	0x51, 0xef, 0x0b, 0xee, 0xb2, 0x73, 0xb6, 0x15, 0x51, 0x4f, 0x2e, 0xea, 0xe3, 0x28, 0xe4, 0x21,
	0xb2, 0x22, 0xea, 0xd5, 0xe5, 0x41, 0x75, 0x7d, 0x10, 0x86, 0x83, 0x21, 0xd9, 0x92, 0x86, 0xfe,
	0xe4, 0x6c, 0xeb, 0x22, 0x72, 0xc7, 0x63, 0x12, 0x29, 0xa8, 0x53, 0x05, 0xb3, 0xdb, 0x7f, 0x43,
	0x3c, 0xde, 0xf6, 0x51, 0x19, 0x72, 0xd4, 0xb7, 0xb5, 0x9a, 0xb6, 0x69, 0xe1, 0x1c, 0xf5, 0x1d,
	0x1b, 0x8c, 0x13, 0x97, 0x9d, 0x2f, 0xb0, 0xfc, 0xa6, 0x81, 0xd9, 0x09, 0x3d, 0x97, 0xd3, 0x30,
	0x40, 0x15, 0xd0, 0x87, 0x2e, 0x97, 0x56, 0x0d, 0x8b, 0xa5, 0x3c, 0x09, 0x06, 0x76, 0x4e, 0x9d,
	0x04, 0x03, 0xb4, 0x06, 0x46, 0xe4, 0xfa, 0x74, 0xc2, 0x6c, 0x5d, 0x1e, 0xaa, 0x1d, 0xb2, 0xa1,
	0xe8, 0xfa, 0x7e, 0x44, 0x18, 0xb3, 0xf3, 0xd2, 0x7b, 0xb2, 0x45, 0x4f, 0xc0, 0xa0, 0x81, 0x1f,
	0x86, 0x91, 0x5d, 0xa8, 0x69, 0x9b, 0xa5, 0xc6, 0xfd, 0xfa, 0xec, 0x51, 0xf5, 0xb6, 0x34, 0x24,
	0x04, 0xb0, 0x02, 0x3a, 0x18, 0xca, 0x59, 0x0b, 0x5a, 0x01, 0xed, 0xad, 0x22, 0xa6, 0xbd, 0x15,
	0xbb, 0xa9, 0x22, 0xa5, 0x4d, 0xc5, 0xee, 0x9d, 0x62, 0xa3, 0xbd, 0x4b, 0x11, 0xcc, 0xa7, 0x09,
	0x3a, 0xbf, 0x14, 0x20, 0x2f, 0x82, 0x80, 0x3e, 0x9e, 0x85, 0xa0, 0xd4, 0xf8, 0x5f, 0x8a, 0x4b,
	0x1c, 0x21, 0x11, 0x15, 0x84, 0x20, 0x1f, 0xb8, 0x23, 0x22, 0xaf, 0xb0, 0xb0, 0x5c, 0x8b, 0xb3,
	0x73, 0x1a, 0xf8, 0xf2, 0x22, 0x0b, 0xcb, 0x35, 0xaa, 0x41, 0xc9, 0x27, 0xcc, 0x8b, 0xe8, 0x58,
	0x90, 0x54, 0x0f, 0x4f, 0x1f, 0xa1, 0x3a, 0x18, 0x8c, 0xbb, 0x7c, 0xc2, 0xe4, 0xe3, 0xcb, 0x8d,
	0xb5, 0x4b, 0x17, 0xd6, 0x8f, 0xa5, 0x15, 0x2b, 0x14, 0x7a, 0x0c, 0x46, 0x28, 0xb3, 0x68, 0x1b,
	0x92, 0xe0, 0x9d, 0x14, 0x3e, 0x49, 0x2f, 0x56, 0x10, 0xf4, 0x08, 0x0a, 0x7d, 0x32, 0xa0, 0x81,
	0x5d, 0xbc, 0x82, 0x9d, 0x85, 0x34, 0x46, 0xa0, 0x0d, 0xd0, 0x49, 0xe0, 0xdb, 0xe6, 0x72, 0xa0,
	0xb0, 0xa3, 0x07, 0x00, 0x5e, 0x44, 0x5c, 0x4e, 0xfc, 0x9e, 0xcb, 0x6d, 0xab, 0xa6, 0x6d, 0xea,
	0xd8, 0x52, 0x27, 0xbb, 0x1c, 0x3d, 0x01, 0xcb, 0x27, 0xae, 0x3f, 0xa4, 0x01, 0x61, 0x36, 0xd4,
	0xf4, 0x4b, 0xbe, 0x9a, 0xca, 0x86, 0xe7, 0x28, 0xc1, 0x31, 0xbc, 0x08, 0x48, 0x64, 0x97, 0x96,
	0xbf, 0x27, 0x46, 0xa0, 0x6d, 0x28, 0xb2, 0x89, 0xe7, 0x09, 0x09, 0xad, 0x48, 0x70, 0xb5, 0x1e,
	0x6b, 0xbe, 0x9e, 0x68, 0xbe, 0xbe, 0x17, 0x86, 0xc3, 0x57, 0xee, 0x70, 0x42, 0x70, 0x02, 0x15,
	0xc2, 0xf3, 0xc2, 0xd1, 0x88, 0x04, 0xdc, 0x5e, 0x8d, 0x85, 0xa7, 0xb6, 0xe8, 0x2e, 0x14, 0xce,
	0xe8, 0x90, 0x30, 0xbb, 0x5c, 0xd3, 0x37, 0x2d, 0x1c, 0x6f, 0xd0, 0x16, 0x98, 0x2e, 0x63, 0x74,
	0x10, 0x10, 0x62, 0xdf, 0x5e, 0xce, 0x69, 0x06, 0x72, 0xda, 0x60, 0xc4, 0x49, 0x42, 0x25, 0x28,
	0xb6, 0x8f, 0x5e, 0xed, 0x76, 0xda, 0xcd, 0xca, 0x2d, 0xb1, 0xd9, 0xc7, 0xad, 0xdd, 0x93, 0x56,
	0xb3, 0xa2, 0xa1, 0x15, 0x30, 0x77, 0x8f, 0x8f, 0xdb, 0x07, 0x47, 0xad, 0x66, 0x25, 0x17, 0xe3,
	0x7a, 0xaf, 0xbb, 0xf8, 0xfb, 0x8a, 0x8e, 0x00, 0x8c, 0xfd, 0x4e, 0xf7, 0xb8, 0xd5, 0xac, 0xe4,
	0x9d, 0xdf, 0x35, 0x30, 0x93, 0x20, 0xa1, 0x8f, 0xc0, 0xe2, 0x74, 0x44, 0x18, 0x77, 0x47, 0x63,
	0x29, 0x47, 0x1d, 0xcf, 0x0f, 0xd0, 0x37, 0xb0, 0x12, 0x84, 0x9c, 0x9e, 0x4d, 0x7b, 0x93, 0x80,
	0xd3, 0xa1, 0x94, 0x62, 0xa9, 0xf1, 0xff, 0x2b, 0x11, 0x69, 0x07, 0xfc, 0xe9, 0x76, 0x1c, 0x92,
	0x52, 0xfc, 0xc1, 0xa9, 0xc0, 0xa7, 0x84, 0xa7, 0xdf, 0x44, 0x78, 0xce, 0x5f, 0x3a, 0xc0, 0x0b,
	0x97, 0x71, 0x12, 0xc9, 0x22, 0xd9, 0x00, 0x3d, 0x9c, 0x55, 0xc9, 0xc2, 0x00, 0x09, 0xfb, 0x3c,
	0xbb, 0xb9, 0x6b, 0xb3, 0xfb, 0x08, 0x0a, 0x83, 0x28, 0x9c, 0x8c, 0x25, 0x9f, 0x65, 0x50, 0x89,
	0x40, 0x8f, 0xc1, 0x64, 0x93, 0xbe, 0xb4, 0xd9, 0x79, 0xa9, 0xb2, 0xdb, 0x97, 0xd8, 0xe3, 0x19,
	0x00, 0xed, 0x80, 0xe5, 0x85, 0x01, 0xe3, 0x91, 0x4b, 0x03, 0x55, 0x64, 0x0f, 0x53, 0xe8, 0xf9,
	0x9b, 0xea, 0xfb, 0x09, 0x0c, 0xcf, 0xbf, 0x10, 0x65, 0xcd, 0xdd, 0x01, 0xb3, 0x0d, 0xa9, 0x11,
	0xb9, 0x46, 0xcf, 0xc1, 0x1c, 0x47, 0x34, 0x8c, 0x28, 0x9f, 0xca, 0xd2, 0x2a, 0x37, 0xd6, 0x17,
	0x7b, 0x7c, 0xa9, 0x50, 0x78, 0x86, 0x97, 0xfe, 0xe8, 0x88, 0xc8, 0x4a, 0xd3, 0xb1, 0x5c, 0xa7,
	0x8a, 0xda, 0xba, 0xb6, 0xa8, 0x9d, 0x6d, 0xb0, 0x66, 0x44, 0xb3, 0x8a, 0x5b, 0x05, 0xeb, 0xf4,
	0xa8, 0x8b, 0x9b, 0x2d, 0x2c, 0x35, 0x57, 0x82, 0x62, 0xb2, 0xc9, 0x39, 0xcf, 0xc0, 0x4c, 0xc8,
	0xc4, 0xb8, 0x66, 0xeb, 0xdb, 0xb6, 0x50, 0xe3, 0x2d, 0x54, 0x04, 0xbd, 0xd3, 0x7d, 0x5d, 0xd1,
	0x84, 0x12, 0x8f, 0xba, 0xf8, 0xc5, 0x6e, 0xa7, 0x92, 0x43, 0x26, 0xe4, 0x0f, 0xdb, 0x07, 0x87,
	0x15, 0xdd, 0x39, 0x80, 0xd5, 0x7d, 0x59, 0xe0, 0x98, 0xfc, 0x34, 0x21, 0x8c, 0xa3, 0xa7, 0x50,
	0x1a, 0xc9, 0x27, 0xf6, 0x04, 0x43, 0x25, 0x81, 0x7b, 0x0b, 0x03, 0x80, 0x61, 0x34, 0x5b, 0x3b,
	0x1e, 0x94, 0x13, 0x47, 0x6c, 0x1c, 0x06, 0x8c, 0xdc, 0x54, 0x44, 0x9f, 0x89, 0xba, 0xef, 0xf7,
	0xa8, 0xcf, 0xec, 0x9c, 0xcc, 0xf6, 0x82, 0xae, 0x6c, 0xb0, 0x49, 0xbf, 0xed, 0x33, 0x67, 0x00,
	0x70, 0x40, 0x78, 0x42, 0xf5, 0xd3, 0xeb, 0x2e, 0x38, 0xbc, 0x15, 0x5f, 0xb1, 0x01, 0x3a, 0xa7,
	0xbe, 0x52, 0xe9, 0x55, 0xf7, 0x02, 0xc6, 0xa9, 0xbf, 0x67, 0x41, 0x71, 0xec, 0x4e, 0x87, 0xa1,
	0xeb, 0x3b, 0x2d, 0x28, 0xc9, 0x8b, 0xd4, 0x53, 0x3e, 0x34, 0x28, 0x6f, 0x60, 0xb5, 0x49, 0x86,
	0x64, 0x1e, 0xdd, 0xff, 0x90, 0x72, 0x05, 0xca, 0xc9, 0x5d, 0x31, 0x6b, 0x91, 0xdb, 0xd3, 0xb1,
	0xff, 0x2f, 0xe4, 0xf6, 0x10, 0xca, 0x89, 0xa3, 0x7f, 0x18, 0x90, 0x3f, 0x35, 0x40, 0xb1, 0xab,
	0x6e, 0xe4, 0x93, 0x28, 0x21, 0xf6, 0x49, 0x6a, 0x28, 0x2f, 0x54, 0x8a, 0x18, 0xcb, 0xdf, 0x81,
	0x35, 0x0e, 0x19, 0x15, 0xe3, 0x2a, 0x91, 0xca, 0xe7, 0x29, 0xec, 0x55, 0xb7, 0xf5, 0x97, 0x09,
	0xbc, 0x15, 0xf0, 0x68, 0x8a, 0xe7, 0x9f, 0x57, 0xbf, 0x86, 0x72, 0xd6, 0x28, 0x7e, 0xeb, 0x9c,
	0x93, 0xa9, 0xfa, 0x6d, 0x24, 0x96, 0x62, 0x80, 0xfc, 0x2c, 0x3a, 0xab, 0x4c, 0x42, 0x01, 0xc7,
	0x9b, 0xe7, 0xb9, 0x67, 0x9a, 0x73, 0x0f, 0xee, 0x64, 0x6e, 0x53, 0xf1, 0xfe, 0x35, 0x07, 0x77,
	0xf6, 0x7f, 0x74, 0x83, 0x01, 0x51, 0xdd, 0x55, 0xbd, 0xee, 0x06, 0x3f, 0x39, 0xbe, 0x02, 0x08,
	0xc8, 0x45, 0x4f, 0xf5, 0xec, 0xdc, 0x7b, 0x7b, 0xb6, 0x15, 0x90, 0x0b, 0x35, 0x92, 0xb6, 0xc0,
	0x1c, 0xaa, 0x09, 0xbe, 0xa0, 0xb1, 0xce, 0x86, 0xfb, 0x0c, 0x94, 0x1e, 0xb2, 0xf9, 0x0f, 0x1a,
	0xb2, 0x85, 0x25, 0x43, 0xd6, 0x48, 0x0d, 0x59, 0x67, 0x0d, 0xee, 0x66, 0xe3, 0x10, 0x07, 0xa8,
	0xf1, 0x87, 0x0e, 0x85, 0x13, 0xd5, 0xb6, 0x8d, 0xb8, 0x5b, 0x20, 0x3b, 0x45, 0x38, 0xd3, 0x89,
	0xaa, 0xf7, 0x17, 0x58, 0x94, 0xfc, 0xb6, 0x41, 0x3f, 0x20, 0x1c, 0xa5, 0x05, 0x37, 0xef, 0x0b,
	0xd5, 0xb5, 0xcb, 0xc7, 0xea, 0xab, 0x1d, 0x30, 0xe2, 0xb4, 0x65, 0x2e, 0xcd, 0x94, 0x48, 0xe6,
	0xd2, 0x4b, 0x9a, 0xdf, 0x01, 0x23, 0x2e, 0xb0, 0xcc, 0xe7, 0x99, 0xfa, 0xce, 0x7c, 0x9e, 0xad,
	0x46, 0xd4, 0x81, 0x52, 0x4a, 0x34, 0xe8, 0xc1, 0x7b, 0xa5, 0x5b, 0x5d, 0x5f, 0x66, 0x56, 0xde,
	0xba, 0xb0, 0x92, 0x0e, 0x31, 0x4a, 0xe3, 0x17, 0x68, 0xb0, 0xfa, 0x70, 0xa9, 0x3d, 0x76, 0xb8,
	0x07, 0x3f, 0x98, 0xc9, 0xbf, 0x8f, 0xbe, 0x21, 0xc5, 0xf0, 0xe5, 0xdf, 0x01, 0x00, 0x00, 0xff,
	0xff, 0xc4, 0x1b, 0x6d, 0x1d, 0x9a, 0x0c, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// TasksClient is the client API for Tasks service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TasksClient interface {
	Create(ctx context.Context, in *CreateRequest, opts ...grpc.CallOption) (*CreateResponse, error)
	// get master task by it's id or by some subtask id
	// this request always return full master task
	Get(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*GetResponse, error)
	// this method can update master task and subtasks information
	// this method can't update (return error):
	// 1. subtasks status (use ChangeStatus)
	// 2. subtasks deadlines if status not equal to CREATED or ASSIGNED
	// 3. subtasks order (use UpdateOrder)
	// 4. begin and end location if status not equal to CREATED or ASSIGNED
	//
	// new subtasks can be added but they always append to end of subtasks list
	// use UpdateOrder after this if you need add subtask to specific position
	//
	// to update subtask -> TaskId should be present in request
	// if no TaskId then subtask treated as new
	Update(ctx context.Context, in *UpdateRequest, opts ...grpc.CallOption) (*UpdateResponse, error)
	// this method can delete master task or specific subtask
	// if it is a last subtask then master task also will be deleted
	Delete(ctx context.Context, in *DeleteRequest, opts ...grpc.CallOption) (*DeleteResponse, error)
	// update subtasks order
	// order can be updated only if following true:
	// 1. all subtasks has status CREATED or ASSIGNED
	// 2. all subtasks has no deadlines
	//    (if subtask have deadline you can unset it via Update method)
	UpdateOrder(ctx context.Context, in *UpdateOrderRequest, opts ...grpc.CallOption) (*UpdateOrderResponse, error)
	// change subtask status
	// this method checks master task constrain before change status
	// so if constraint ordered you can't take in work subtask if previous subtask
	// not closed
	//
	// the following status change is allowed:
	// CREATED -> ASSIGNED
	// ASSIGNED -> IN_WORK
	// IN_WORK -> CLOSED (with success flag)
	// CLOSED -> CREATED
	// ASSIGNED -> CREATED
	// ASSIGNED -> CLOSED (method always set success flag to false)
	// CREATED -> CLOSED (method always set success flag to false)
	//
	// if subtask has begin location -> change status to IN_WORK can be done only
	// in this location
	//
	// if subtask has end location -> change status to CLOSED can be done only
	// in this location
	ChangeStatus(ctx context.Context, in *ChangeStatusRequest, opts ...grpc.CallOption) (*ChangeStatusResponse, error)
}

type tasksClient struct {
	cc grpc.ClientConnInterface
}

func NewTasksClient(cc grpc.ClientConnInterface) TasksClient {
	return &tasksClient{cc}
}

func (c *tasksClient) Create(ctx context.Context, in *CreateRequest, opts ...grpc.CallOption) (*CreateResponse, error) {
	out := new(CreateResponse)
	err := c.cc.Invoke(ctx, "/ric.tasks.Tasks/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tasksClient) Get(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*GetResponse, error) {
	out := new(GetResponse)
	err := c.cc.Invoke(ctx, "/ric.tasks.Tasks/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tasksClient) Update(ctx context.Context, in *UpdateRequest, opts ...grpc.CallOption) (*UpdateResponse, error) {
	out := new(UpdateResponse)
	err := c.cc.Invoke(ctx, "/ric.tasks.Tasks/Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tasksClient) Delete(ctx context.Context, in *DeleteRequest, opts ...grpc.CallOption) (*DeleteResponse, error) {
	out := new(DeleteResponse)
	err := c.cc.Invoke(ctx, "/ric.tasks.Tasks/Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tasksClient) UpdateOrder(ctx context.Context, in *UpdateOrderRequest, opts ...grpc.CallOption) (*UpdateOrderResponse, error) {
	out := new(UpdateOrderResponse)
	err := c.cc.Invoke(ctx, "/ric.tasks.Tasks/UpdateOrder", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tasksClient) ChangeStatus(ctx context.Context, in *ChangeStatusRequest, opts ...grpc.CallOption) (*ChangeStatusResponse, error) {
	out := new(ChangeStatusResponse)
	err := c.cc.Invoke(ctx, "/ric.tasks.Tasks/ChangeStatus", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TasksServer is the server API for Tasks service.
type TasksServer interface {
	Create(context.Context, *CreateRequest) (*CreateResponse, error)
	// get master task by it's id or by some subtask id
	// this request always return full master task
	Get(context.Context, *GetRequest) (*GetResponse, error)
	// this method can update master task and subtasks information
	// this method can't update (return error):
	// 1. subtasks status (use ChangeStatus)
	// 2. subtasks deadlines if status not equal to CREATED or ASSIGNED
	// 3. subtasks order (use UpdateOrder)
	// 4. begin and end location if status not equal to CREATED or ASSIGNED
	//
	// new subtasks can be added but they always append to end of subtasks list
	// use UpdateOrder after this if you need add subtask to specific position
	//
	// to update subtask -> TaskId should be present in request
	// if no TaskId then subtask treated as new
	Update(context.Context, *UpdateRequest) (*UpdateResponse, error)
	// this method can delete master task or specific subtask
	// if it is a last subtask then master task also will be deleted
	Delete(context.Context, *DeleteRequest) (*DeleteResponse, error)
	// update subtasks order
	// order can be updated only if following true:
	// 1. all subtasks has status CREATED or ASSIGNED
	// 2. all subtasks has no deadlines
	//    (if subtask have deadline you can unset it via Update method)
	UpdateOrder(context.Context, *UpdateOrderRequest) (*UpdateOrderResponse, error)
	// change subtask status
	// this method checks master task constrain before change status
	// so if constraint ordered you can't take in work subtask if previous subtask
	// not closed
	//
	// the following status change is allowed:
	// CREATED -> ASSIGNED
	// ASSIGNED -> IN_WORK
	// IN_WORK -> CLOSED (with success flag)
	// CLOSED -> CREATED
	// ASSIGNED -> CREATED
	// ASSIGNED -> CLOSED (method always set success flag to false)
	// CREATED -> CLOSED (method always set success flag to false)
	//
	// if subtask has begin location -> change status to IN_WORK can be done only
	// in this location
	//
	// if subtask has end location -> change status to CLOSED can be done only
	// in this location
	ChangeStatus(context.Context, *ChangeStatusRequest) (*ChangeStatusResponse, error)
}

// UnimplementedTasksServer can be embedded to have forward compatible implementations.
type UnimplementedTasksServer struct {
}

func (*UnimplementedTasksServer) Create(ctx context.Context, req *CreateRequest) (*CreateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Create not implemented")
}
func (*UnimplementedTasksServer) Get(ctx context.Context, req *GetRequest) (*GetResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Get not implemented")
}
func (*UnimplementedTasksServer) Update(ctx context.Context, req *UpdateRequest) (*UpdateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Update not implemented")
}
func (*UnimplementedTasksServer) Delete(ctx context.Context, req *DeleteRequest) (*DeleteResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Delete not implemented")
}
func (*UnimplementedTasksServer) UpdateOrder(ctx context.Context, req *UpdateOrderRequest) (*UpdateOrderResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateOrder not implemented")
}
func (*UnimplementedTasksServer) ChangeStatus(ctx context.Context, req *ChangeStatusRequest) (*ChangeStatusResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ChangeStatus not implemented")
}

func RegisterTasksServer(s *grpc.Server, srv TasksServer) {
	s.RegisterService(&_Tasks_serviceDesc, srv)
}

func _Tasks_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TasksServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ric.tasks.Tasks/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TasksServer).Create(ctx, req.(*CreateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Tasks_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TasksServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ric.tasks.Tasks/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TasksServer).Get(ctx, req.(*GetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Tasks_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TasksServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ric.tasks.Tasks/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TasksServer).Update(ctx, req.(*UpdateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Tasks_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TasksServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ric.tasks.Tasks/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TasksServer).Delete(ctx, req.(*DeleteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Tasks_UpdateOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateOrderRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TasksServer).UpdateOrder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ric.tasks.Tasks/UpdateOrder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TasksServer).UpdateOrder(ctx, req.(*UpdateOrderRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Tasks_ChangeStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ChangeStatusRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TasksServer).ChangeStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ric.tasks.Tasks/ChangeStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TasksServer).ChangeStatus(ctx, req.(*ChangeStatusRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Tasks_serviceDesc = grpc.ServiceDesc{
	ServiceName: "ric.tasks.Tasks",
	HandlerType: (*TasksServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _Tasks_Create_Handler,
		},
		{
			MethodName: "Get",
			Handler:    _Tasks_Get_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _Tasks_Update_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _Tasks_Delete_Handler,
		},
		{
			MethodName: "UpdateOrder",
			Handler:    _Tasks_UpdateOrder_Handler,
		},
		{
			MethodName: "ChangeStatus",
			Handler:    _Tasks_ChangeStatus_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "ric-tasks/rictasks.proto",
}
