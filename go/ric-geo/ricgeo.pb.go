// Code generated by protoc-gen-go. DO NOT EDIT.
// source: ric-geo/ricgeo.proto

package ricgeo

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type WatchGeofenceRequest_EventType int32

const (
	WatchGeofenceRequest_ALL            WatchGeofenceRequest_EventType = 0
	WatchGeofenceRequest_GEOFENCE_ENTER WatchGeofenceRequest_EventType = 1
	WatchGeofenceRequest_GEOFENCE_LEAVE WatchGeofenceRequest_EventType = 2
)

var WatchGeofenceRequest_EventType_name = map[int32]string{
	0: "ALL",
	1: "GEOFENCE_ENTER",
	2: "GEOFENCE_LEAVE",
}

var WatchGeofenceRequest_EventType_value = map[string]int32{
	"ALL":            0,
	"GEOFENCE_ENTER": 1,
	"GEOFENCE_LEAVE": 2,
}

func (x WatchGeofenceRequest_EventType) String() string {
	return proto.EnumName(WatchGeofenceRequest_EventType_name, int32(x))
}

func (WatchGeofenceRequest_EventType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_7dd0c87ff6803edb, []int{1, 0}
}

type WatchRoomRequest_EventType int32

const (
	WatchRoomRequest_ALL        WatchRoomRequest_EventType = 0
	WatchRoomRequest_ROOM_ENTER WatchRoomRequest_EventType = 1
	WatchRoomRequest_ROOM_LEAVE WatchRoomRequest_EventType = 2
)

var WatchRoomRequest_EventType_name = map[int32]string{
	0: "ALL",
	1: "ROOM_ENTER",
	2: "ROOM_LEAVE",
}

var WatchRoomRequest_EventType_value = map[string]int32{
	"ALL":        0,
	"ROOM_ENTER": 1,
	"ROOM_LEAVE": 2,
}

func (x WatchRoomRequest_EventType) String() string {
	return proto.EnumName(WatchRoomRequest_EventType_name, int32(x))
}

func (WatchRoomRequest_EventType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_7dd0c87ff6803edb, []int{2, 0}
}

type WatchRouteRequest_EventType int32

const (
	WatchRouteRequest_ALL       WatchRouteRequest_EventType = 0
	WatchRouteRequest_ROUTE_ON  WatchRouteRequest_EventType = 1
	WatchRouteRequest_ROUTE_OFF WatchRouteRequest_EventType = 2
)

var WatchRouteRequest_EventType_name = map[int32]string{
	0: "ALL",
	1: "ROUTE_ON",
	2: "ROUTE_OFF",
}

var WatchRouteRequest_EventType_value = map[string]int32{
	"ALL":       0,
	"ROUTE_ON":  1,
	"ROUTE_OFF": 2,
}

func (x WatchRouteRequest_EventType) String() string {
	return proto.EnumName(WatchRouteRequest_EventType_name, int32(x))
}

func (WatchRouteRequest_EventType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_7dd0c87ff6803edb, []int{4, 0}
}

type WatchRequest_EventType int32

const (
	WatchRequest_UNDEFINED      WatchRequest_EventType = 0
	WatchRequest_GEOFENCE_ENTER WatchRequest_EventType = 1
	WatchRequest_GEOFENCE_LEAVE WatchRequest_EventType = 2
	WatchRequest_GEOFENCE_BOTH  WatchRequest_EventType = 3
	WatchRequest_ROUTE_ON       WatchRequest_EventType = 5
	WatchRequest_ROUTE_OFF      WatchRequest_EventType = 6
	WatchRequest_ROUTE_BOTH     WatchRequest_EventType = 7
	WatchRequest_ROOM_ENTER     WatchRequest_EventType = 9
	WatchRequest_ROOM_LEAVE     WatchRequest_EventType = 10
	WatchRequest_ROOM_BOTH      WatchRequest_EventType = 11
)

var WatchRequest_EventType_name = map[int32]string{
	0:  "UNDEFINED",
	1:  "GEOFENCE_ENTER",
	2:  "GEOFENCE_LEAVE",
	3:  "GEOFENCE_BOTH",
	5:  "ROUTE_ON",
	6:  "ROUTE_OFF",
	7:  "ROUTE_BOTH",
	9:  "ROOM_ENTER",
	10: "ROOM_LEAVE",
	11: "ROOM_BOTH",
}

var WatchRequest_EventType_value = map[string]int32{
	"UNDEFINED":      0,
	"GEOFENCE_ENTER": 1,
	"GEOFENCE_LEAVE": 2,
	"GEOFENCE_BOTH":  3,
	"ROUTE_ON":       5,
	"ROUTE_OFF":      6,
	"ROUTE_BOTH":     7,
	"ROOM_ENTER":     9,
	"ROOM_LEAVE":     10,
	"ROOM_BOTH":      11,
}

func (x WatchRequest_EventType) String() string {
	return proto.EnumName(WatchRequest_EventType_name, int32(x))
}

func (WatchRequest_EventType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_7dd0c87ff6803edb, []int{8, 0}
}

type EmptyResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EmptyResponse) Reset()         { *m = EmptyResponse{} }
func (m *EmptyResponse) String() string { return proto.CompactTextString(m) }
func (*EmptyResponse) ProtoMessage()    {}
func (*EmptyResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7dd0c87ff6803edb, []int{0}
}

func (m *EmptyResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EmptyResponse.Unmarshal(m, b)
}
func (m *EmptyResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EmptyResponse.Marshal(b, m, deterministic)
}
func (m *EmptyResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EmptyResponse.Merge(m, src)
}
func (m *EmptyResponse) XXX_Size() int {
	return xxx_messageInfo_EmptyResponse.Size(m)
}
func (m *EmptyResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_EmptyResponse.DiscardUnknown(m)
}

var xxx_messageInfo_EmptyResponse proto.InternalMessageInfo

type WatchGeofenceRequest struct {
	ObjectId             string                         `protobuf:"bytes,1,opt,name=object_id,json=objectId,proto3" json:"object_id,omitempty"`
	EventType            WatchGeofenceRequest_EventType `protobuf:"varint,2,opt,name=event_type,json=eventType,proto3,enum=ric.geo.WatchGeofenceRequest_EventType" json:"event_type,omitempty"`
	GeofencesIds         []string                       `protobuf:"bytes,3,rep,name=geofences_ids,json=geofencesIds,proto3" json:"geofences_ids,omitempty"`
	Tags                 []string                       `protobuf:"bytes,4,rep,name=tags,proto3" json:"tags,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                       `json:"-"`
	XXX_unrecognized     []byte                         `json:"-"`
	XXX_sizecache        int32                          `json:"-"`
}

func (m *WatchGeofenceRequest) Reset()         { *m = WatchGeofenceRequest{} }
func (m *WatchGeofenceRequest) String() string { return proto.CompactTextString(m) }
func (*WatchGeofenceRequest) ProtoMessage()    {}
func (*WatchGeofenceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7dd0c87ff6803edb, []int{1}
}

func (m *WatchGeofenceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WatchGeofenceRequest.Unmarshal(m, b)
}
func (m *WatchGeofenceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WatchGeofenceRequest.Marshal(b, m, deterministic)
}
func (m *WatchGeofenceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WatchGeofenceRequest.Merge(m, src)
}
func (m *WatchGeofenceRequest) XXX_Size() int {
	return xxx_messageInfo_WatchGeofenceRequest.Size(m)
}
func (m *WatchGeofenceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_WatchGeofenceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_WatchGeofenceRequest proto.InternalMessageInfo

func (m *WatchGeofenceRequest) GetObjectId() string {
	if m != nil {
		return m.ObjectId
	}
	return ""
}

func (m *WatchGeofenceRequest) GetEventType() WatchGeofenceRequest_EventType {
	if m != nil {
		return m.EventType
	}
	return WatchGeofenceRequest_ALL
}

func (m *WatchGeofenceRequest) GetGeofencesIds() []string {
	if m != nil {
		return m.GeofencesIds
	}
	return nil
}

func (m *WatchGeofenceRequest) GetTags() []string {
	if m != nil {
		return m.Tags
	}
	return nil
}

type WatchRoomRequest struct {
	ObjectId             string                     `protobuf:"bytes,1,opt,name=object_id,json=objectId,proto3" json:"object_id,omitempty"`
	EventType            WatchRoomRequest_EventType `protobuf:"varint,2,opt,name=event_type,json=eventType,proto3,enum=ric.geo.WatchRoomRequest_EventType" json:"event_type,omitempty"`
	Fences               []*Fence                   `protobuf:"bytes,3,rep,name=fences,proto3" json:"fences,omitempty"`
	Tags                 []string                   `protobuf:"bytes,4,rep,name=tags,proto3" json:"tags,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *WatchRoomRequest) Reset()         { *m = WatchRoomRequest{} }
func (m *WatchRoomRequest) String() string { return proto.CompactTextString(m) }
func (*WatchRoomRequest) ProtoMessage()    {}
func (*WatchRoomRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7dd0c87ff6803edb, []int{2}
}

func (m *WatchRoomRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WatchRoomRequest.Unmarshal(m, b)
}
func (m *WatchRoomRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WatchRoomRequest.Marshal(b, m, deterministic)
}
func (m *WatchRoomRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WatchRoomRequest.Merge(m, src)
}
func (m *WatchRoomRequest) XXX_Size() int {
	return xxx_messageInfo_WatchRoomRequest.Size(m)
}
func (m *WatchRoomRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_WatchRoomRequest.DiscardUnknown(m)
}

var xxx_messageInfo_WatchRoomRequest proto.InternalMessageInfo

func (m *WatchRoomRequest) GetObjectId() string {
	if m != nil {
		return m.ObjectId
	}
	return ""
}

func (m *WatchRoomRequest) GetEventType() WatchRoomRequest_EventType {
	if m != nil {
		return m.EventType
	}
	return WatchRoomRequest_ALL
}

func (m *WatchRoomRequest) GetFences() []*Fence {
	if m != nil {
		return m.Fences
	}
	return nil
}

func (m *WatchRoomRequest) GetTags() []string {
	if m != nil {
		return m.Tags
	}
	return nil
}

type Fence struct {
	GeofenceId           string   `protobuf:"bytes,1,opt,name=geofence_id,json=geofenceId,proto3" json:"geofence_id,omitempty"`
	ShapeId              string   `protobuf:"bytes,2,opt,name=shape_id,json=shapeId,proto3" json:"shape_id,omitempty"`
	RoomId               string   `protobuf:"bytes,3,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Fence) Reset()         { *m = Fence{} }
func (m *Fence) String() string { return proto.CompactTextString(m) }
func (*Fence) ProtoMessage()    {}
func (*Fence) Descriptor() ([]byte, []int) {
	return fileDescriptor_7dd0c87ff6803edb, []int{3}
}

func (m *Fence) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Fence.Unmarshal(m, b)
}
func (m *Fence) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Fence.Marshal(b, m, deterministic)
}
func (m *Fence) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Fence.Merge(m, src)
}
func (m *Fence) XXX_Size() int {
	return xxx_messageInfo_Fence.Size(m)
}
func (m *Fence) XXX_DiscardUnknown() {
	xxx_messageInfo_Fence.DiscardUnknown(m)
}

var xxx_messageInfo_Fence proto.InternalMessageInfo

func (m *Fence) GetGeofenceId() string {
	if m != nil {
		return m.GeofenceId
	}
	return ""
}

func (m *Fence) GetShapeId() string {
	if m != nil {
		return m.ShapeId
	}
	return ""
}

func (m *Fence) GetRoomId() string {
	if m != nil {
		return m.RoomId
	}
	return ""
}

type WatchRouteRequest struct {
	ObjectId             string                      `protobuf:"bytes,1,opt,name=object_id,json=objectId,proto3" json:"object_id,omitempty"`
	EventType            WatchRouteRequest_EventType `protobuf:"varint,2,opt,name=event_type,json=eventType,proto3,enum=ric.geo.WatchRouteRequest_EventType" json:"event_type,omitempty"`
	RoutesIds            []string                    `protobuf:"bytes,3,rep,name=routes_ids,json=routesIds,proto3" json:"routes_ids,omitempty"`
	Tags                 []string                    `protobuf:"bytes,4,rep,name=tags,proto3" json:"tags,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *WatchRouteRequest) Reset()         { *m = WatchRouteRequest{} }
func (m *WatchRouteRequest) String() string { return proto.CompactTextString(m) }
func (*WatchRouteRequest) ProtoMessage()    {}
func (*WatchRouteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7dd0c87ff6803edb, []int{4}
}

func (m *WatchRouteRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WatchRouteRequest.Unmarshal(m, b)
}
func (m *WatchRouteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WatchRouteRequest.Marshal(b, m, deterministic)
}
func (m *WatchRouteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WatchRouteRequest.Merge(m, src)
}
func (m *WatchRouteRequest) XXX_Size() int {
	return xxx_messageInfo_WatchRouteRequest.Size(m)
}
func (m *WatchRouteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_WatchRouteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_WatchRouteRequest proto.InternalMessageInfo

func (m *WatchRouteRequest) GetObjectId() string {
	if m != nil {
		return m.ObjectId
	}
	return ""
}

func (m *WatchRouteRequest) GetEventType() WatchRouteRequest_EventType {
	if m != nil {
		return m.EventType
	}
	return WatchRouteRequest_ALL
}

func (m *WatchRouteRequest) GetRoutesIds() []string {
	if m != nil {
		return m.RoutesIds
	}
	return nil
}

func (m *WatchRouteRequest) GetTags() []string {
	if m != nil {
		return m.Tags
	}
	return nil
}

type UpdateGeoRequest struct {
	GeofenceId           string   `protobuf:"bytes,1,opt,name=geofence_id,json=geofenceId,proto3" json:"geofence_id,omitempty"`
	ShapeId              string   `protobuf:"bytes,2,opt,name=shape_id,json=shapeId,proto3" json:"shape_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateGeoRequest) Reset()         { *m = UpdateGeoRequest{} }
func (m *UpdateGeoRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateGeoRequest) ProtoMessage()    {}
func (*UpdateGeoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7dd0c87ff6803edb, []int{5}
}

func (m *UpdateGeoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateGeoRequest.Unmarshal(m, b)
}
func (m *UpdateGeoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateGeoRequest.Marshal(b, m, deterministic)
}
func (m *UpdateGeoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateGeoRequest.Merge(m, src)
}
func (m *UpdateGeoRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateGeoRequest.Size(m)
}
func (m *UpdateGeoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateGeoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateGeoRequest proto.InternalMessageInfo

func (m *UpdateGeoRequest) GetGeofenceId() string {
	if m != nil {
		return m.GeofenceId
	}
	return ""
}

func (m *UpdateGeoRequest) GetShapeId() string {
	if m != nil {
		return m.ShapeId
	}
	return ""
}

type GetObjectInfoRequest struct {
	ObjectId             string   `protobuf:"bytes,1,opt,name=object_id,json=objectId,proto3" json:"object_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetObjectInfoRequest) Reset()         { *m = GetObjectInfoRequest{} }
func (m *GetObjectInfoRequest) String() string { return proto.CompactTextString(m) }
func (*GetObjectInfoRequest) ProtoMessage()    {}
func (*GetObjectInfoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7dd0c87ff6803edb, []int{6}
}

func (m *GetObjectInfoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetObjectInfoRequest.Unmarshal(m, b)
}
func (m *GetObjectInfoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetObjectInfoRequest.Marshal(b, m, deterministic)
}
func (m *GetObjectInfoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetObjectInfoRequest.Merge(m, src)
}
func (m *GetObjectInfoRequest) XXX_Size() int {
	return xxx_messageInfo_GetObjectInfoRequest.Size(m)
}
func (m *GetObjectInfoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetObjectInfoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetObjectInfoRequest proto.InternalMessageInfo

func (m *GetObjectInfoRequest) GetObjectId() string {
	if m != nil {
		return m.ObjectId
	}
	return ""
}

type GetObjectInfoResponse struct {
	Geofences            []*GetObjectInfoResponse_ObjectGeofenceInfo `protobuf:"bytes,1,rep,name=geofences,proto3" json:"geofences,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                    `json:"-"`
	XXX_unrecognized     []byte                                      `json:"-"`
	XXX_sizecache        int32                                       `json:"-"`
}

func (m *GetObjectInfoResponse) Reset()         { *m = GetObjectInfoResponse{} }
func (m *GetObjectInfoResponse) String() string { return proto.CompactTextString(m) }
func (*GetObjectInfoResponse) ProtoMessage()    {}
func (*GetObjectInfoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7dd0c87ff6803edb, []int{7}
}

func (m *GetObjectInfoResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetObjectInfoResponse.Unmarshal(m, b)
}
func (m *GetObjectInfoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetObjectInfoResponse.Marshal(b, m, deterministic)
}
func (m *GetObjectInfoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetObjectInfoResponse.Merge(m, src)
}
func (m *GetObjectInfoResponse) XXX_Size() int {
	return xxx_messageInfo_GetObjectInfoResponse.Size(m)
}
func (m *GetObjectInfoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetObjectInfoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetObjectInfoResponse proto.InternalMessageInfo

func (m *GetObjectInfoResponse) GetGeofences() []*GetObjectInfoResponse_ObjectGeofenceInfo {
	if m != nil {
		return m.Geofences
	}
	return nil
}

type GetObjectInfoResponse_ObjectGeofenceInfo struct {
	GeofenceId           string   `protobuf:"bytes,1,opt,name=geofence_id,json=geofenceId,proto3" json:"geofence_id,omitempty"`
	IsIn                 bool     `protobuf:"varint,2,opt,name=is_in,json=isIn,proto3" json:"is_in,omitempty"`
	LastPacketTime       int64    `protobuf:"varint,3,opt,name=last_packet_time,json=lastPacketTime,proto3" json:"last_packet_time,omitempty"`
	LastEnterTime        int64    `protobuf:"varint,4,opt,name=last_enter_time,json=lastEnterTime,proto3" json:"last_enter_time,omitempty"`
	LastLeaveTime        int64    `protobuf:"varint,5,opt,name=last_leave_time,json=lastLeaveTime,proto3" json:"last_leave_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetObjectInfoResponse_ObjectGeofenceInfo) Reset() {
	*m = GetObjectInfoResponse_ObjectGeofenceInfo{}
}
func (m *GetObjectInfoResponse_ObjectGeofenceInfo) String() string { return proto.CompactTextString(m) }
func (*GetObjectInfoResponse_ObjectGeofenceInfo) ProtoMessage()    {}
func (*GetObjectInfoResponse_ObjectGeofenceInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_7dd0c87ff6803edb, []int{7, 0}
}

func (m *GetObjectInfoResponse_ObjectGeofenceInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetObjectInfoResponse_ObjectGeofenceInfo.Unmarshal(m, b)
}
func (m *GetObjectInfoResponse_ObjectGeofenceInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetObjectInfoResponse_ObjectGeofenceInfo.Marshal(b, m, deterministic)
}
func (m *GetObjectInfoResponse_ObjectGeofenceInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetObjectInfoResponse_ObjectGeofenceInfo.Merge(m, src)
}
func (m *GetObjectInfoResponse_ObjectGeofenceInfo) XXX_Size() int {
	return xxx_messageInfo_GetObjectInfoResponse_ObjectGeofenceInfo.Size(m)
}
func (m *GetObjectInfoResponse_ObjectGeofenceInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_GetObjectInfoResponse_ObjectGeofenceInfo.DiscardUnknown(m)
}

var xxx_messageInfo_GetObjectInfoResponse_ObjectGeofenceInfo proto.InternalMessageInfo

func (m *GetObjectInfoResponse_ObjectGeofenceInfo) GetGeofenceId() string {
	if m != nil {
		return m.GeofenceId
	}
	return ""
}

func (m *GetObjectInfoResponse_ObjectGeofenceInfo) GetIsIn() bool {
	if m != nil {
		return m.IsIn
	}
	return false
}

func (m *GetObjectInfoResponse_ObjectGeofenceInfo) GetLastPacketTime() int64 {
	if m != nil {
		return m.LastPacketTime
	}
	return 0
}

func (m *GetObjectInfoResponse_ObjectGeofenceInfo) GetLastEnterTime() int64 {
	if m != nil {
		return m.LastEnterTime
	}
	return 0
}

func (m *GetObjectInfoResponse_ObjectGeofenceInfo) GetLastLeaveTime() int64 {
	if m != nil {
		return m.LastLeaveTime
	}
	return 0
}

type WatchRequest struct {
	ObjectId             string                 `protobuf:"bytes,1,opt,name=object_id,json=objectId,proto3" json:"object_id,omitempty"`
	EventType            WatchRequest_EventType `protobuf:"varint,2,opt,name=event_type,json=eventType,proto3,enum=ric.geo.WatchRequest_EventType" json:"event_type,omitempty"`
	Fences               []*Fence               `protobuf:"bytes,3,rep,name=fences,proto3" json:"fences,omitempty"`
	Tags                 []string               `protobuf:"bytes,4,rep,name=tags,proto3" json:"tags,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *WatchRequest) Reset()         { *m = WatchRequest{} }
func (m *WatchRequest) String() string { return proto.CompactTextString(m) }
func (*WatchRequest) ProtoMessage()    {}
func (*WatchRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7dd0c87ff6803edb, []int{8}
}

func (m *WatchRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WatchRequest.Unmarshal(m, b)
}
func (m *WatchRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WatchRequest.Marshal(b, m, deterministic)
}
func (m *WatchRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WatchRequest.Merge(m, src)
}
func (m *WatchRequest) XXX_Size() int {
	return xxx_messageInfo_WatchRequest.Size(m)
}
func (m *WatchRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_WatchRequest.DiscardUnknown(m)
}

var xxx_messageInfo_WatchRequest proto.InternalMessageInfo

func (m *WatchRequest) GetObjectId() string {
	if m != nil {
		return m.ObjectId
	}
	return ""
}

func (m *WatchRequest) GetEventType() WatchRequest_EventType {
	if m != nil {
		return m.EventType
	}
	return WatchRequest_UNDEFINED
}

func (m *WatchRequest) GetFences() []*Fence {
	if m != nil {
		return m.Fences
	}
	return nil
}

func (m *WatchRequest) GetTags() []string {
	if m != nil {
		return m.Tags
	}
	return nil
}

type StopRequest struct {
	ObjectId             string   `protobuf:"bytes,1,opt,name=object_id,json=objectId,proto3" json:"object_id,omitempty"`
	Fences               []*Fence `protobuf:"bytes,2,rep,name=fences,proto3" json:"fences,omitempty"`
	Tags                 []string `protobuf:"bytes,3,rep,name=tags,proto3" json:"tags,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StopRequest) Reset()         { *m = StopRequest{} }
func (m *StopRequest) String() string { return proto.CompactTextString(m) }
func (*StopRequest) ProtoMessage()    {}
func (*StopRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7dd0c87ff6803edb, []int{9}
}

func (m *StopRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StopRequest.Unmarshal(m, b)
}
func (m *StopRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StopRequest.Marshal(b, m, deterministic)
}
func (m *StopRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StopRequest.Merge(m, src)
}
func (m *StopRequest) XXX_Size() int {
	return xxx_messageInfo_StopRequest.Size(m)
}
func (m *StopRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StopRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StopRequest proto.InternalMessageInfo

func (m *StopRequest) GetObjectId() string {
	if m != nil {
		return m.ObjectId
	}
	return ""
}

func (m *StopRequest) GetFences() []*Fence {
	if m != nil {
		return m.Fences
	}
	return nil
}

func (m *StopRequest) GetTags() []string {
	if m != nil {
		return m.Tags
	}
	return nil
}

type ControlRequest struct {
	ObjectId             string   `protobuf:"bytes,1,opt,name=object_id,json=objectId,proto3" json:"object_id,omitempty"`
	Time                 *Time    `protobuf:"bytes,2,opt,name=time,proto3" json:"time,omitempty"`
	Circle               *Circle  `protobuf:"bytes,3,opt,name=circle,proto3" json:"circle,omitempty"`
	Tags                 []string `protobuf:"bytes,4,rep,name=tags,proto3" json:"tags,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ControlRequest) Reset()         { *m = ControlRequest{} }
func (m *ControlRequest) String() string { return proto.CompactTextString(m) }
func (*ControlRequest) ProtoMessage()    {}
func (*ControlRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7dd0c87ff6803edb, []int{10}
}

func (m *ControlRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ControlRequest.Unmarshal(m, b)
}
func (m *ControlRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ControlRequest.Marshal(b, m, deterministic)
}
func (m *ControlRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ControlRequest.Merge(m, src)
}
func (m *ControlRequest) XXX_Size() int {
	return xxx_messageInfo_ControlRequest.Size(m)
}
func (m *ControlRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ControlRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ControlRequest proto.InternalMessageInfo

func (m *ControlRequest) GetObjectId() string {
	if m != nil {
		return m.ObjectId
	}
	return ""
}

func (m *ControlRequest) GetTime() *Time {
	if m != nil {
		return m.Time
	}
	return nil
}

func (m *ControlRequest) GetCircle() *Circle {
	if m != nil {
		return m.Circle
	}
	return nil
}

func (m *ControlRequest) GetTags() []string {
	if m != nil {
		return m.Tags
	}
	return nil
}

type Time struct {
	Start                int64    `protobuf:"varint,1,opt,name=start,proto3" json:"start,omitempty"`
	Interval             int64    `protobuf:"varint,2,opt,name=interval,proto3" json:"interval,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Time) Reset()         { *m = Time{} }
func (m *Time) String() string { return proto.CompactTextString(m) }
func (*Time) ProtoMessage()    {}
func (*Time) Descriptor() ([]byte, []int) {
	return fileDescriptor_7dd0c87ff6803edb, []int{11}
}

func (m *Time) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Time.Unmarshal(m, b)
}
func (m *Time) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Time.Marshal(b, m, deterministic)
}
func (m *Time) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Time.Merge(m, src)
}
func (m *Time) XXX_Size() int {
	return xxx_messageInfo_Time.Size(m)
}
func (m *Time) XXX_DiscardUnknown() {
	xxx_messageInfo_Time.DiscardUnknown(m)
}

var xxx_messageInfo_Time proto.InternalMessageInfo

func (m *Time) GetStart() int64 {
	if m != nil {
		return m.Start
	}
	return 0
}

func (m *Time) GetInterval() int64 {
	if m != nil {
		return m.Interval
	}
	return 0
}

type Circle struct {
	Lat                  float64  `protobuf:"fixed64,1,opt,name=lat,proto3" json:"lat,omitempty"`
	Lon                  float64  `protobuf:"fixed64,2,opt,name=lon,proto3" json:"lon,omitempty"`
	Radius               float64  `protobuf:"fixed64,3,opt,name=radius,proto3" json:"radius,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Circle) Reset()         { *m = Circle{} }
func (m *Circle) String() string { return proto.CompactTextString(m) }
func (*Circle) ProtoMessage()    {}
func (*Circle) Descriptor() ([]byte, []int) {
	return fileDescriptor_7dd0c87ff6803edb, []int{12}
}

func (m *Circle) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Circle.Unmarshal(m, b)
}
func (m *Circle) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Circle.Marshal(b, m, deterministic)
}
func (m *Circle) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Circle.Merge(m, src)
}
func (m *Circle) XXX_Size() int {
	return xxx_messageInfo_Circle.Size(m)
}
func (m *Circle) XXX_DiscardUnknown() {
	xxx_messageInfo_Circle.DiscardUnknown(m)
}

var xxx_messageInfo_Circle proto.InternalMessageInfo

func (m *Circle) GetLat() float64 {
	if m != nil {
		return m.Lat
	}
	return 0
}

func (m *Circle) GetLon() float64 {
	if m != nil {
		return m.Lon
	}
	return 0
}

func (m *Circle) GetRadius() float64 {
	if m != nil {
		return m.Radius
	}
	return 0
}

type OsmResponse struct {
	Data                 []byte   `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OsmResponse) Reset()         { *m = OsmResponse{} }
func (m *OsmResponse) String() string { return proto.CompactTextString(m) }
func (*OsmResponse) ProtoMessage()    {}
func (*OsmResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7dd0c87ff6803edb, []int{13}
}

func (m *OsmResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OsmResponse.Unmarshal(m, b)
}
func (m *OsmResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OsmResponse.Marshal(b, m, deterministic)
}
func (m *OsmResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OsmResponse.Merge(m, src)
}
func (m *OsmResponse) XXX_Size() int {
	return xxx_messageInfo_OsmResponse.Size(m)
}
func (m *OsmResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_OsmResponse.DiscardUnknown(m)
}

var xxx_messageInfo_OsmResponse proto.InternalMessageInfo

func (m *OsmResponse) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type GeocodeRequest struct {
	Query                string   `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GeocodeRequest) Reset()         { *m = GeocodeRequest{} }
func (m *GeocodeRequest) String() string { return proto.CompactTextString(m) }
func (*GeocodeRequest) ProtoMessage()    {}
func (*GeocodeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7dd0c87ff6803edb, []int{14}
}

func (m *GeocodeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GeocodeRequest.Unmarshal(m, b)
}
func (m *GeocodeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GeocodeRequest.Marshal(b, m, deterministic)
}
func (m *GeocodeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GeocodeRequest.Merge(m, src)
}
func (m *GeocodeRequest) XXX_Size() int {
	return xxx_messageInfo_GeocodeRequest.Size(m)
}
func (m *GeocodeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GeocodeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GeocodeRequest proto.InternalMessageInfo

func (m *GeocodeRequest) GetQuery() string {
	if m != nil {
		return m.Query
	}
	return ""
}

type Point struct {
	Lat                  float64  `protobuf:"fixed64,1,opt,name=lat,proto3" json:"lat,omitempty"`
	Lon                  float64  `protobuf:"fixed64,2,opt,name=lon,proto3" json:"lon,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Point) Reset()         { *m = Point{} }
func (m *Point) String() string { return proto.CompactTextString(m) }
func (*Point) ProtoMessage()    {}
func (*Point) Descriptor() ([]byte, []int) {
	return fileDescriptor_7dd0c87ff6803edb, []int{15}
}

func (m *Point) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Point.Unmarshal(m, b)
}
func (m *Point) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Point.Marshal(b, m, deterministic)
}
func (m *Point) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Point.Merge(m, src)
}
func (m *Point) XXX_Size() int {
	return xxx_messageInfo_Point.Size(m)
}
func (m *Point) XXX_DiscardUnknown() {
	xxx_messageInfo_Point.DiscardUnknown(m)
}

var xxx_messageInfo_Point proto.InternalMessageInfo

func (m *Point) GetLat() float64 {
	if m != nil {
		return m.Lat
	}
	return 0
}

func (m *Point) GetLon() float64 {
	if m != nil {
		return m.Lon
	}
	return 0
}

type GeocodeReverseRequest struct {
	Point                *Point   `protobuf:"bytes,1,opt,name=point,proto3" json:"point,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GeocodeReverseRequest) Reset()         { *m = GeocodeReverseRequest{} }
func (m *GeocodeReverseRequest) String() string { return proto.CompactTextString(m) }
func (*GeocodeReverseRequest) ProtoMessage()    {}
func (*GeocodeReverseRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7dd0c87ff6803edb, []int{16}
}

func (m *GeocodeReverseRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GeocodeReverseRequest.Unmarshal(m, b)
}
func (m *GeocodeReverseRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GeocodeReverseRequest.Marshal(b, m, deterministic)
}
func (m *GeocodeReverseRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GeocodeReverseRequest.Merge(m, src)
}
func (m *GeocodeReverseRequest) XXX_Size() int {
	return xxx_messageInfo_GeocodeReverseRequest.Size(m)
}
func (m *GeocodeReverseRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GeocodeReverseRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GeocodeReverseRequest proto.InternalMessageInfo

func (m *GeocodeReverseRequest) GetPoint() *Point {
	if m != nil {
		return m.Point
	}
	return nil
}

type GetRouteRequest struct {
	Coordinates          []*Point `protobuf:"bytes,1,rep,name=coordinates,proto3" json:"coordinates,omitempty"`
	Options              []byte   `protobuf:"bytes,2,opt,name=options,proto3" json:"options,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetRouteRequest) Reset()         { *m = GetRouteRequest{} }
func (m *GetRouteRequest) String() string { return proto.CompactTextString(m) }
func (*GetRouteRequest) ProtoMessage()    {}
func (*GetRouteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7dd0c87ff6803edb, []int{17}
}

func (m *GetRouteRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRouteRequest.Unmarshal(m, b)
}
func (m *GetRouteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRouteRequest.Marshal(b, m, deterministic)
}
func (m *GetRouteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRouteRequest.Merge(m, src)
}
func (m *GetRouteRequest) XXX_Size() int {
	return xxx_messageInfo_GetRouteRequest.Size(m)
}
func (m *GetRouteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRouteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetRouteRequest proto.InternalMessageInfo

func (m *GetRouteRequest) GetCoordinates() []*Point {
	if m != nil {
		return m.Coordinates
	}
	return nil
}

func (m *GetRouteRequest) GetOptions() []byte {
	if m != nil {
		return m.Options
	}
	return nil
}

type IndoorCircle struct {
	X                    float64  `protobuf:"fixed64,1,opt,name=x,proto3" json:"x,omitempty"`
	Y                    float64  `protobuf:"fixed64,2,opt,name=y,proto3" json:"y,omitempty"`
	Z                    float64  `protobuf:"fixed64,3,opt,name=z,proto3" json:"z,omitempty"`
	Radius               float64  `protobuf:"fixed64,4,opt,name=radius,proto3" json:"radius,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IndoorCircle) Reset()         { *m = IndoorCircle{} }
func (m *IndoorCircle) String() string { return proto.CompactTextString(m) }
func (*IndoorCircle) ProtoMessage()    {}
func (*IndoorCircle) Descriptor() ([]byte, []int) {
	return fileDescriptor_7dd0c87ff6803edb, []int{18}
}

func (m *IndoorCircle) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IndoorCircle.Unmarshal(m, b)
}
func (m *IndoorCircle) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IndoorCircle.Marshal(b, m, deterministic)
}
func (m *IndoorCircle) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IndoorCircle.Merge(m, src)
}
func (m *IndoorCircle) XXX_Size() int {
	return xxx_messageInfo_IndoorCircle.Size(m)
}
func (m *IndoorCircle) XXX_DiscardUnknown() {
	xxx_messageInfo_IndoorCircle.DiscardUnknown(m)
}

var xxx_messageInfo_IndoorCircle proto.InternalMessageInfo

func (m *IndoorCircle) GetX() float64 {
	if m != nil {
		return m.X
	}
	return 0
}

func (m *IndoorCircle) GetY() float64 {
	if m != nil {
		return m.Y
	}
	return 0
}

func (m *IndoorCircle) GetZ() float64 {
	if m != nil {
		return m.Z
	}
	return 0
}

func (m *IndoorCircle) GetRadius() float64 {
	if m != nil {
		return m.Radius
	}
	return 0
}

type Zone struct {
	Circle               *Circle       `protobuf:"bytes,1,opt,name=circle,proto3" json:"circle,omitempty"`
	IndoorCircle         *IndoorCircle `protobuf:"bytes,2,opt,name=indoor_circle,json=indoorCircle,proto3" json:"indoor_circle,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *Zone) Reset()         { *m = Zone{} }
func (m *Zone) String() string { return proto.CompactTextString(m) }
func (*Zone) ProtoMessage()    {}
func (*Zone) Descriptor() ([]byte, []int) {
	return fileDescriptor_7dd0c87ff6803edb, []int{19}
}

func (m *Zone) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Zone.Unmarshal(m, b)
}
func (m *Zone) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Zone.Marshal(b, m, deterministic)
}
func (m *Zone) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Zone.Merge(m, src)
}
func (m *Zone) XXX_Size() int {
	return xxx_messageInfo_Zone.Size(m)
}
func (m *Zone) XXX_DiscardUnknown() {
	xxx_messageInfo_Zone.DiscardUnknown(m)
}

var xxx_messageInfo_Zone proto.InternalMessageInfo

func (m *Zone) GetCircle() *Circle {
	if m != nil {
		return m.Circle
	}
	return nil
}

func (m *Zone) GetIndoorCircle() *IndoorCircle {
	if m != nil {
		return m.IndoorCircle
	}
	return nil
}

type IndoorPoint struct {
	X                    float64  `protobuf:"fixed64,1,opt,name=x,proto3" json:"x,omitempty"`
	Y                    float64  `protobuf:"fixed64,2,opt,name=y,proto3" json:"y,omitempty"`
	Z                    float64  `protobuf:"fixed64,3,opt,name=z,proto3" json:"z,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IndoorPoint) Reset()         { *m = IndoorPoint{} }
func (m *IndoorPoint) String() string { return proto.CompactTextString(m) }
func (*IndoorPoint) ProtoMessage()    {}
func (*IndoorPoint) Descriptor() ([]byte, []int) {
	return fileDescriptor_7dd0c87ff6803edb, []int{20}
}

func (m *IndoorPoint) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IndoorPoint.Unmarshal(m, b)
}
func (m *IndoorPoint) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IndoorPoint.Marshal(b, m, deterministic)
}
func (m *IndoorPoint) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IndoorPoint.Merge(m, src)
}
func (m *IndoorPoint) XXX_Size() int {
	return xxx_messageInfo_IndoorPoint.Size(m)
}
func (m *IndoorPoint) XXX_DiscardUnknown() {
	xxx_messageInfo_IndoorPoint.DiscardUnknown(m)
}

var xxx_messageInfo_IndoorPoint proto.InternalMessageInfo

func (m *IndoorPoint) GetX() float64 {
	if m != nil {
		return m.X
	}
	return 0
}

func (m *IndoorPoint) GetY() float64 {
	if m != nil {
		return m.Y
	}
	return 0
}

func (m *IndoorPoint) GetZ() float64 {
	if m != nil {
		return m.Z
	}
	return 0
}

type Position struct {
	Location             *Point       `protobuf:"bytes,1,opt,name=location,proto3" json:"location,omitempty"`
	IndoorLocation       *IndoorPoint `protobuf:"bytes,2,opt,name=indoor_location,json=indoorLocation,proto3" json:"indoor_location,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *Position) Reset()         { *m = Position{} }
func (m *Position) String() string { return proto.CompactTextString(m) }
func (*Position) ProtoMessage()    {}
func (*Position) Descriptor() ([]byte, []int) {
	return fileDescriptor_7dd0c87ff6803edb, []int{21}
}

func (m *Position) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Position.Unmarshal(m, b)
}
func (m *Position) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Position.Marshal(b, m, deterministic)
}
func (m *Position) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Position.Merge(m, src)
}
func (m *Position) XXX_Size() int {
	return xxx_messageInfo_Position.Size(m)
}
func (m *Position) XXX_DiscardUnknown() {
	xxx_messageInfo_Position.DiscardUnknown(m)
}

var xxx_messageInfo_Position proto.InternalMessageInfo

func (m *Position) GetLocation() *Point {
	if m != nil {
		return m.Location
	}
	return nil
}

func (m *Position) GetIndoorLocation() *IndoorPoint {
	if m != nil {
		return m.IndoorLocation
	}
	return nil
}

type CheckInRequest struct {
	Position             *Position `protobuf:"bytes,1,opt,name=position,proto3" json:"position,omitempty"`
	Zone                 *Zone     `protobuf:"bytes,2,opt,name=zone,proto3" json:"zone,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *CheckInRequest) Reset()         { *m = CheckInRequest{} }
func (m *CheckInRequest) String() string { return proto.CompactTextString(m) }
func (*CheckInRequest) ProtoMessage()    {}
func (*CheckInRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7dd0c87ff6803edb, []int{22}
}

func (m *CheckInRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CheckInRequest.Unmarshal(m, b)
}
func (m *CheckInRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CheckInRequest.Marshal(b, m, deterministic)
}
func (m *CheckInRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CheckInRequest.Merge(m, src)
}
func (m *CheckInRequest) XXX_Size() int {
	return xxx_messageInfo_CheckInRequest.Size(m)
}
func (m *CheckInRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CheckInRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CheckInRequest proto.InternalMessageInfo

func (m *CheckInRequest) GetPosition() *Position {
	if m != nil {
		return m.Position
	}
	return nil
}

func (m *CheckInRequest) GetZone() *Zone {
	if m != nil {
		return m.Zone
	}
	return nil
}

type CheckInResponse struct {
	In                   bool     `protobuf:"varint,1,opt,name=in,proto3" json:"in,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CheckInResponse) Reset()         { *m = CheckInResponse{} }
func (m *CheckInResponse) String() string { return proto.CompactTextString(m) }
func (*CheckInResponse) ProtoMessage()    {}
func (*CheckInResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7dd0c87ff6803edb, []int{23}
}

func (m *CheckInResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CheckInResponse.Unmarshal(m, b)
}
func (m *CheckInResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CheckInResponse.Marshal(b, m, deterministic)
}
func (m *CheckInResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CheckInResponse.Merge(m, src)
}
func (m *CheckInResponse) XXX_Size() int {
	return xxx_messageInfo_CheckInResponse.Size(m)
}
func (m *CheckInResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CheckInResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CheckInResponse proto.InternalMessageInfo

func (m *CheckInResponse) GetIn() bool {
	if m != nil {
		return m.In
	}
	return false
}

func init() {
	proto.RegisterEnum("ric.geo.WatchGeofenceRequest_EventType", WatchGeofenceRequest_EventType_name, WatchGeofenceRequest_EventType_value)
	proto.RegisterEnum("ric.geo.WatchRoomRequest_EventType", WatchRoomRequest_EventType_name, WatchRoomRequest_EventType_value)
	proto.RegisterEnum("ric.geo.WatchRouteRequest_EventType", WatchRouteRequest_EventType_name, WatchRouteRequest_EventType_value)
	proto.RegisterEnum("ric.geo.WatchRequest_EventType", WatchRequest_EventType_name, WatchRequest_EventType_value)
	proto.RegisterType((*EmptyResponse)(nil), "ric.geo.EmptyResponse")
	proto.RegisterType((*WatchGeofenceRequest)(nil), "ric.geo.WatchGeofenceRequest")
	proto.RegisterType((*WatchRoomRequest)(nil), "ric.geo.WatchRoomRequest")
	proto.RegisterType((*Fence)(nil), "ric.geo.Fence")
	proto.RegisterType((*WatchRouteRequest)(nil), "ric.geo.WatchRouteRequest")
	proto.RegisterType((*UpdateGeoRequest)(nil), "ric.geo.UpdateGeoRequest")
	proto.RegisterType((*GetObjectInfoRequest)(nil), "ric.geo.GetObjectInfoRequest")
	proto.RegisterType((*GetObjectInfoResponse)(nil), "ric.geo.GetObjectInfoResponse")
	proto.RegisterType((*GetObjectInfoResponse_ObjectGeofenceInfo)(nil), "ric.geo.GetObjectInfoResponse.ObjectGeofenceInfo")
	proto.RegisterType((*WatchRequest)(nil), "ric.geo.WatchRequest")
	proto.RegisterType((*StopRequest)(nil), "ric.geo.StopRequest")
	proto.RegisterType((*ControlRequest)(nil), "ric.geo.ControlRequest")
	proto.RegisterType((*Time)(nil), "ric.geo.Time")
	proto.RegisterType((*Circle)(nil), "ric.geo.Circle")
	proto.RegisterType((*OsmResponse)(nil), "ric.geo.OsmResponse")
	proto.RegisterType((*GeocodeRequest)(nil), "ric.geo.GeocodeRequest")
	proto.RegisterType((*Point)(nil), "ric.geo.Point")
	proto.RegisterType((*GeocodeReverseRequest)(nil), "ric.geo.GeocodeReverseRequest")
	proto.RegisterType((*GetRouteRequest)(nil), "ric.geo.GetRouteRequest")
	proto.RegisterType((*IndoorCircle)(nil), "ric.geo.IndoorCircle")
	proto.RegisterType((*Zone)(nil), "ric.geo.Zone")
	proto.RegisterType((*IndoorPoint)(nil), "ric.geo.IndoorPoint")
	proto.RegisterType((*Position)(nil), "ric.geo.Position")
	proto.RegisterType((*CheckInRequest)(nil), "ric.geo.CheckInRequest")
	proto.RegisterType((*CheckInResponse)(nil), "ric.geo.CheckInResponse")
}

func init() { proto.RegisterFile("ric-geo/ricgeo.proto", fileDescriptor_7dd0c87ff6803edb) }

var fileDescriptor_7dd0c87ff6803edb = []byte{
	// 1302 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x57, 0xeb, 0x8e, 0xd3, 0x46,
	0x14, 0xae, 0xe3, 0xdc, 0x7c, 0x72, 0xd9, 0xec, 0x74, 0x81, 0x90, 0x8a, 0x9b, 0x41, 0xb0, 0x6a,
	0xc5, 0xb6, 0x04, 0xd4, 0x22, 0x04, 0x48, 0x10, 0x9c, 0x34, 0xea, 0x12, 0xaf, 0x86, 0x85, 0x4a,
	0xa8, 0x55, 0x64, 0xec, 0x61, 0x71, 0x49, 0x3c, 0xc6, 0x9e, 0x5d, 0x91, 0x7d, 0x81, 0xf6, 0x4f,
	0x9f, 0xa5, 0xea, 0x33, 0xb4, 0x6f, 0xc1, 0xdf, 0xf6, 0x05, 0xfa, 0x04, 0xd5, 0xcc, 0xd8, 0x8e,
	0x9d, 0x75, 0xd2, 0x48, 0x4b, 0xff, 0x44, 0x3e, 0x97, 0xf9, 0xe6, 0x9c, 0x6f, 0xce, 0x9c, 0x39,
	0x81, 0xad, 0xc0, 0xb5, 0x6f, 0x1e, 0x10, 0xfa, 0x65, 0xe0, 0xda, 0x07, 0x84, 0xee, 0xf8, 0x01,
	0x65, 0x14, 0x55, 0x02, 0xd7, 0xde, 0x39, 0x20, 0x54, 0xdf, 0x80, 0x86, 0x31, 0xf5, 0xd9, 0x0c,
	0x93, 0xd0, 0xa7, 0x5e, 0x48, 0xf4, 0x7f, 0x14, 0xd8, 0xfa, 0xde, 0x62, 0xf6, 0x9b, 0x01, 0xa1,
	0xaf, 0x89, 0x67, 0x13, 0x4c, 0xde, 0x1d, 0x92, 0x90, 0xa1, 0xcf, 0x40, 0xa3, 0xaf, 0x7e, 0x22,
	0x36, 0x1b, 0xbb, 0x4e, 0x5b, 0xb9, 0xac, 0x6c, 0x6b, 0xb8, 0x2a, 0x15, 0x43, 0x07, 0xf5, 0x01,
	0xc8, 0x11, 0xf1, 0xd8, 0x98, 0xcd, 0x7c, 0xd2, 0x2e, 0x5c, 0x56, 0xb6, 0x9b, 0xdd, 0x1b, 0x3b,
	0xd1, 0x26, 0x3b, 0x79, 0x78, 0x3b, 0x06, 0xf7, 0xdf, 0x9f, 0xf9, 0x04, 0x6b, 0x24, 0xfe, 0x44,
	0x57, 0xa1, 0x71, 0x10, 0xf9, 0x85, 0x63, 0xd7, 0x09, 0xdb, 0xea, 0x65, 0x75, 0x5b, 0xc3, 0xf5,
	0x44, 0x39, 0x74, 0x42, 0x84, 0xa0, 0xc8, 0xac, 0x83, 0xb0, 0x5d, 0x14, 0x36, 0xf1, 0xad, 0xdf,
	0x07, 0x2d, 0x01, 0x44, 0x15, 0x50, 0x1f, 0xed, 0xee, 0xb6, 0x3e, 0x41, 0x08, 0x9a, 0x03, 0xc3,
	0xec, 0x1b, 0xa3, 0x9e, 0x31, 0x36, 0x46, 0xfb, 0x06, 0x6e, 0x29, 0x19, 0xdd, 0xae, 0xf1, 0xe8,
	0x85, 0xd1, 0x2a, 0xe8, 0x7f, 0x2b, 0xd0, 0x12, 0x41, 0x62, 0x4a, 0xa7, 0x6b, 0x25, 0xfc, 0x38,
	0x27, 0xe1, 0xab, 0xd9, 0x84, 0x53, 0x58, 0xf9, 0xc9, 0x5e, 0x87, 0xb2, 0x4c, 0x4a, 0x64, 0x59,
	0xeb, 0x36, 0x93, 0xf5, 0x7d, 0x41, 0x54, 0x64, 0xcd, 0xcd, 0xf7, 0x4e, 0x6e, 0xbe, 0x4d, 0x00,
	0x6c, 0x9a, 0x4f, 0x93, 0x5c, 0x63, 0x39, 0xce, 0xf3, 0x07, 0x28, 0x09, 0x68, 0x74, 0x09, 0x6a,
	0x31, 0xa5, 0xf3, 0xec, 0x20, 0x56, 0x0d, 0x1d, 0x74, 0x1e, 0xaa, 0xe1, 0x1b, 0xcb, 0x17, 0xd6,
	0x82, 0xb0, 0x56, 0x84, 0x3c, 0x74, 0xd0, 0x39, 0xa8, 0x04, 0x94, 0x4e, 0xb9, 0x45, 0x15, 0x96,
	0x32, 0x17, 0x87, 0x8e, 0xfe, 0x41, 0x81, 0xcd, 0x28, 0xf3, 0x43, 0xb6, 0x5e, 0xdd, 0xf4, 0x72,
	0x68, 0xbc, 0xb6, 0x48, 0xe3, 0x1c, 0x2c, 0x9f, 0xc7, 0x0b, 0x00, 0x01, 0x77, 0x4a, 0x57, 0x8c,
	0x26, 0x35, 0xcb, 0xca, 0xe5, 0x56, 0x2e, 0x7d, 0x75, 0xa8, 0x62, 0xf3, 0xf9, 0xbe, 0x31, 0x36,
	0x47, 0x2d, 0x05, 0x35, 0x40, 0x8b, 0xa4, 0x7e, 0xbf, 0x55, 0xd0, 0x47, 0xd0, 0x7a, 0xee, 0x3b,
	0x16, 0x23, 0x03, 0x42, 0xe3, 0xdc, 0x4e, 0x41, 0xa3, 0x7e, 0x1b, 0xb6, 0x06, 0x84, 0x99, 0x92,
	0x09, 0xef, 0x35, 0x5d, 0x87, 0x2f, 0xfd, 0xb7, 0x02, 0x9c, 0x59, 0x58, 0x25, 0xef, 0x2d, 0x32,
	0x41, 0x4b, 0x2e, 0x49, 0x5b, 0x11, 0xf5, 0x74, 0x2b, 0x21, 0x32, 0x77, 0xc9, 0x8e, 0x54, 0xc5,
	0xf7, 0x52, 0x98, 0xe6, 0x18, 0x9d, 0x3f, 0x15, 0x40, 0x27, 0x3d, 0xfe, 0x3b, 0xe5, 0x4f, 0xa1,
	0xe4, 0x86, 0x63, 0xd7, 0x13, 0xf9, 0x56, 0x71, 0xd1, 0x0d, 0x87, 0x1e, 0xda, 0x86, 0xd6, 0xc4,
	0x0a, 0xd9, 0xd8, 0xb7, 0xec, 0xb7, 0x84, 0x8d, 0x99, 0x3b, 0x25, 0xa2, 0x78, 0x54, 0xdc, 0xe4,
	0xfa, 0x3d, 0xa1, 0xde, 0x77, 0xa7, 0xfc, 0x52, 0x6c, 0x08, 0x4f, 0xe2, 0x31, 0x12, 0x48, 0xc7,
	0xa2, 0x70, 0x6c, 0x70, 0xb5, 0xc1, 0xb5, 0x19, 0xbf, 0x09, 0xb1, 0x8e, 0x88, 0xf4, 0x2b, 0xcd,
	0xfd, 0x76, 0xb9, 0x96, 0xfb, 0xe9, 0x1f, 0x0a, 0x50, 0x97, 0x75, 0xb4, 0x4e, 0x3d, 0x3e, 0xcc,
	0xa9, 0xc7, 0x4b, 0x0b, 0xf5, 0xf8, 0x7f, 0x5d, 0xe9, 0xdf, 0x95, 0x74, 0x51, 0x36, 0x40, 0x7b,
	0x3e, 0x7a, 0x62, 0xf4, 0x87, 0x23, 0xe3, 0xc9, 0xfa, 0x9d, 0x0c, 0x6d, 0x42, 0x23, 0xd1, 0x3d,
	0x36, 0xf7, 0xbf, 0x6d, 0xa9, 0x99, 0xaa, 0x2e, 0x65, 0xab, 0xba, 0x2c, 0x3b, 0x04, 0x17, 0x85,
	0x73, 0x65, 0xa1, 0x83, 0x68, 0x0b, 0x1d, 0x04, 0xe4, 0x72, 0xf3, 0xa9, 0x74, 0xaf, 0xe9, 0xaf,
	0xa1, 0xf6, 0x8c, 0x51, 0x7f, 0x2d, 0x6e, 0xe7, 0xdc, 0x14, 0xd6, 0xe2, 0x46, 0x4d, 0x71, 0xf3,
	0xab, 0x02, 0xcd, 0x1e, 0xf5, 0x58, 0x40, 0x27, 0x6b, 0xed, 0x75, 0x05, 0x8a, 0xa2, 0x24, 0xf8,
	0x09, 0xd6, 0xba, 0x8d, 0x64, 0x27, 0x5e, 0x12, 0x58, 0x98, 0xd0, 0x0d, 0x28, 0xdb, 0x6e, 0x60,
	0x4f, 0x64, 0x21, 0xd6, 0xba, 0x1b, 0x89, 0x53, 0x4f, 0xa8, 0x71, 0x64, 0xce, 0x3d, 0xab, 0xbb,
	0x50, 0x14, 0x55, 0xb8, 0x05, 0xa5, 0x90, 0x59, 0x01, 0x13, 0x01, 0xa8, 0x58, 0x0a, 0xa8, 0x03,
	0x55, 0x97, 0x17, 0xea, 0x91, 0x35, 0x11, 0x11, 0xa8, 0x38, 0x91, 0xf5, 0x27, 0x50, 0x96, 0xf8,
	0xa8, 0x05, 0xea, 0xc4, 0x92, 0x2b, 0x15, 0xcc, 0x3f, 0x85, 0x86, 0xca, 0x8b, 0xc3, 0x35, 0xd4,
	0x43, 0x67, 0xa1, 0x1c, 0x58, 0x8e, 0x7b, 0x18, 0x8a, 0x20, 0x15, 0x1c, 0x49, 0xfa, 0x15, 0xa8,
	0x99, 0xe1, 0x34, 0xb9, 0xfc, 0x08, 0x8a, 0x8e, 0xc5, 0x2c, 0x81, 0x55, 0xc7, 0xe2, 0x5b, 0xbf,
	0x0e, 0xcd, 0x01, 0xa1, 0x36, 0x75, 0x92, 0x4e, 0xbc, 0x05, 0xa5, 0x77, 0x87, 0x24, 0x98, 0x45,
	0x6c, 0x49, 0x41, 0xff, 0x02, 0x4a, 0x7b, 0xd4, 0xf5, 0xd8, 0x3a, 0xf1, 0xe8, 0x0f, 0x78, 0xfb,
	0x89, 0x40, 0x8f, 0x48, 0x10, 0x26, 0xd8, 0xd7, 0xa0, 0xe4, 0x73, 0x14, 0xb1, 0x3c, 0x7d, 0xb6,
	0x02, 0x1b, 0x4b, 0xa3, 0xfe, 0x23, 0x6c, 0x0c, 0x08, 0xcb, 0x3c, 0x0f, 0x5f, 0x41, 0xcd, 0xa6,
	0x34, 0x70, 0x5c, 0xcf, 0x62, 0x49, 0xe7, 0x5a, 0x5c, 0x9e, 0x76, 0x41, 0x6d, 0xa8, 0x50, 0x9f,
	0xb9, 0xd4, 0x0b, 0x45, 0x64, 0x75, 0x1c, 0x8b, 0xfa, 0x1e, 0xd4, 0x87, 0x9e, 0x43, 0x69, 0x10,
	0x31, 0x5c, 0x07, 0xe5, 0x7d, 0x94, 0x8f, 0xf2, 0x9e, 0x4b, 0xb3, 0x28, 0x17, 0x65, 0xc6, 0xa5,
	0xe3, 0x88, 0x54, 0xe5, 0x38, 0xc5, 0x73, 0x31, 0xc3, 0xf3, 0x5b, 0x28, 0xbe, 0xa4, 0x5e, 0xba,
	0x58, 0x94, 0xd5, 0xc5, 0x72, 0x0f, 0x1a, 0xae, 0x08, 0x61, 0x1c, 0xf9, 0xcb, 0x0a, 0x3c, 0x93,
	0xf8, 0xa7, 0x03, 0xc4, 0x75, 0x37, 0x25, 0xe9, 0xdf, 0x40, 0x4d, 0x5a, 0xe5, 0x79, 0xac, 0x1d,
	0xbd, 0x7e, 0x08, 0xd5, 0x3d, 0x1a, 0xba, 0x9c, 0x04, 0xf4, 0x39, 0x54, 0x27, 0xd4, 0xb6, 0xf8,
	0xf7, 0x92, 0xb3, 0x48, 0xec, 0xe8, 0x01, 0x6c, 0x44, 0xc1, 0x26, 0x4b, 0x64, 0xb8, 0x5b, 0x0b,
	0xe1, 0xca, 0x85, 0x4d, 0xe9, 0xbc, 0x1b, 0xf9, 0xea, 0xaf, 0xa0, 0xd9, 0x7b, 0x43, 0xec, 0xb7,
	0x43, 0x2f, 0x3e, 0xcc, 0x9b, 0x50, 0xf5, 0xa3, 0x40, 0xa2, 0xcd, 0x37, 0x53, 0x9b, 0x4b, 0x03,
	0x4e, 0x5c, 0xf8, 0x2d, 0x3d, 0xa6, 0xde, 0xc9, 0x5b, 0xca, 0x29, 0xc7, 0xc2, 0xa4, 0x5f, 0x81,
	0x8d, 0x64, 0x8f, 0xa8, 0xd8, 0x9b, 0x50, 0x70, 0x25, 0x7c, 0x15, 0x17, 0x5c, 0xaf, 0xfb, 0x57,
	0x11, 0x4a, 0xa2, 0x33, 0xa3, 0xef, 0xa0, 0x91, 0x19, 0x35, 0xd1, 0x85, 0x95, 0x23, 0x68, 0xe7,
	0x6c, 0x62, 0xce, 0xce, 0xc0, 0xea, 0x2f, 0x05, 0x05, 0x99, 0xb0, 0xc9, 0x5b, 0xdb, 0xc7, 0x03,
	0xec, 0x81, 0x96, 0xcc, 0x85, 0xe8, 0xfc, 0xd2, 0x59, 0x71, 0x35, 0xc8, 0x00, 0x1a, 0x49, 0x54,
	0xa7, 0x02, 0x32, 0x00, 0xe6, 0xe3, 0x15, 0xea, 0x2c, 0x9f, 0xb9, 0x56, 0xc3, 0x0c, 0xa1, 0x99,
	0x8a, 0xe7, 0x54, 0x50, 0x3d, 0xd0, 0x92, 0x01, 0x2b, 0x95, 0xd6, 0xe2, 0xd0, 0xb5, 0x1a, 0xe4,
	0x19, 0x34, 0x32, 0xc3, 0x4e, 0xea, 0xc4, 0xf2, 0xa6, 0xad, 0xce, 0xc5, 0xd5, 0x33, 0x92, 0x00,
	0xed, 0xf0, 0x9f, 0xee, 0xcf, 0x05, 0xa8, 0x88, 0x8c, 0x5e, 0x74, 0xd1, 0xd7, 0x71, 0xc5, 0x9d,
	0xc9, 0x9d, 0x0d, 0x96, 0x85, 0x88, 0xee, 0x40, 0x91, 0xb3, 0x85, 0xe6, 0xf7, 0x2b, 0xf5, 0x7a,
	0x2e, 0x5d, 0xf5, 0xf0, 0x74, 0xc4, 0xa0, 0xd1, 0xc7, 0xe5, 0xa4, 0x6b, 0xc2, 0xe6, 0x23, 0xc6,
	0x88, 0xe7, 0x58, 0x9e, 0x4d, 0xa2, 0x57, 0x19, 0xdd, 0x83, 0x4a, 0xfc, 0x79, 0x6e, 0xde, 0x1c,
	0x33, 0x4f, 0xf6, 0xb2, 0x00, 0xbb, 0x7f, 0x28, 0xa0, 0x9a, 0xe1, 0x14, 0xdd, 0x85, 0x4a, 0xf4,
	0xba, 0xa4, 0x30, 0xb2, 0x8f, 0x58, 0x67, 0x4e, 0x5d, 0xfa, 0x01, 0xec, 0xa7, 0x1e, 0x3b, 0xf1,
	0x2e, 0xa1, 0x8b, 0x27, 0x01, 0xd2, 0x0f, 0xd6, 0x12, 0x9c, 0x7b, 0x50, 0x8d, 0x1f, 0x28, 0xd4,
	0x4e, 0xd3, 0x90, 0x29, 0xe3, 0xdc, 0xb5, 0x5d, 0x03, 0x4a, 0xa2, 0x55, 0xa1, 0xfb, 0x50, 0x89,
	0x7a, 0x56, 0x9a, 0x8a, 0x4c, 0xa7, 0xec, 0xb4, 0x4f, 0x1a, 0x24, 0xcc, 0xe3, 0xea, 0xcb, 0xb2,
	0xfc, 0xab, 0xfe, 0xaa, 0x2c, 0xfe, 0xab, 0xdf, 0xfe, 0x37, 0x00, 0x00, 0xff, 0xff, 0x04, 0x72,
	0xe2, 0xef, 0xc3, 0x0f, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// WatchClient is the client API for Watch service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
//
// Deprecated: Do not use.
type WatchClient interface {
	//
	// Deprecated: Do not use.
	WatchGeofence(ctx context.Context, in *WatchGeofenceRequest, opts ...grpc.CallOption) (*EmptyResponse, error)
	//
	// Deprecated: Do not use.
	StopWatchGeofence(ctx context.Context, in *WatchGeofenceRequest, opts ...grpc.CallOption) (*EmptyResponse, error)
	//
	// Deprecated: Do not use.
	WatchRoom(ctx context.Context, in *WatchRoomRequest, opts ...grpc.CallOption) (*EmptyResponse, error)
	//
	// Deprecated: Do not use.
	StopWatchRoom(ctx context.Context, in *WatchRoomRequest, opts ...grpc.CallOption) (*EmptyResponse, error)
	//
	// Deprecated: Do not use.
	WatchRoute(ctx context.Context, in *WatchRouteRequest, opts ...grpc.CallOption) (*EmptyResponse, error)
	//
	// Deprecated: Do not use.
	StopWatchRoute(ctx context.Context, in *WatchRouteRequest, opts ...grpc.CallOption) (*EmptyResponse, error)
	//
	// Deprecated: Do not use.
	UpdateGeo(ctx context.Context, in *UpdateGeoRequest, opts ...grpc.CallOption) (*EmptyResponse, error)
	//
	// Deprecated: Do not use.
	GetObjectInfo(ctx context.Context, in *GetObjectInfoRequest, opts ...grpc.CallOption) (*GetObjectInfoResponse, error)
}

type watchClient struct {
	cc *grpc.ClientConn
}

// Deprecated: Do not use.
func NewWatchClient(cc *grpc.ClientConn) WatchClient {
	return &watchClient{cc}
}

// Deprecated: Do not use.
func (c *watchClient) WatchGeofence(ctx context.Context, in *WatchGeofenceRequest, opts ...grpc.CallOption) (*EmptyResponse, error) {
	out := new(EmptyResponse)
	err := c.cc.Invoke(ctx, "/ric.geo.Watch/WatchGeofence", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Deprecated: Do not use.
func (c *watchClient) StopWatchGeofence(ctx context.Context, in *WatchGeofenceRequest, opts ...grpc.CallOption) (*EmptyResponse, error) {
	out := new(EmptyResponse)
	err := c.cc.Invoke(ctx, "/ric.geo.Watch/StopWatchGeofence", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Deprecated: Do not use.
func (c *watchClient) WatchRoom(ctx context.Context, in *WatchRoomRequest, opts ...grpc.CallOption) (*EmptyResponse, error) {
	out := new(EmptyResponse)
	err := c.cc.Invoke(ctx, "/ric.geo.Watch/WatchRoom", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Deprecated: Do not use.
func (c *watchClient) StopWatchRoom(ctx context.Context, in *WatchRoomRequest, opts ...grpc.CallOption) (*EmptyResponse, error) {
	out := new(EmptyResponse)
	err := c.cc.Invoke(ctx, "/ric.geo.Watch/StopWatchRoom", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Deprecated: Do not use.
func (c *watchClient) WatchRoute(ctx context.Context, in *WatchRouteRequest, opts ...grpc.CallOption) (*EmptyResponse, error) {
	out := new(EmptyResponse)
	err := c.cc.Invoke(ctx, "/ric.geo.Watch/WatchRoute", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Deprecated: Do not use.
func (c *watchClient) StopWatchRoute(ctx context.Context, in *WatchRouteRequest, opts ...grpc.CallOption) (*EmptyResponse, error) {
	out := new(EmptyResponse)
	err := c.cc.Invoke(ctx, "/ric.geo.Watch/StopWatchRoute", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Deprecated: Do not use.
func (c *watchClient) UpdateGeo(ctx context.Context, in *UpdateGeoRequest, opts ...grpc.CallOption) (*EmptyResponse, error) {
	out := new(EmptyResponse)
	err := c.cc.Invoke(ctx, "/ric.geo.Watch/UpdateGeo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Deprecated: Do not use.
func (c *watchClient) GetObjectInfo(ctx context.Context, in *GetObjectInfoRequest, opts ...grpc.CallOption) (*GetObjectInfoResponse, error) {
	out := new(GetObjectInfoResponse)
	err := c.cc.Invoke(ctx, "/ric.geo.Watch/GetObjectInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// WatchServer is the server API for Watch service.
//
// Deprecated: Do not use.
type WatchServer interface {
	//
	// Deprecated: Do not use.
	WatchGeofence(context.Context, *WatchGeofenceRequest) (*EmptyResponse, error)
	//
	// Deprecated: Do not use.
	StopWatchGeofence(context.Context, *WatchGeofenceRequest) (*EmptyResponse, error)
	//
	// Deprecated: Do not use.
	WatchRoom(context.Context, *WatchRoomRequest) (*EmptyResponse, error)
	//
	// Deprecated: Do not use.
	StopWatchRoom(context.Context, *WatchRoomRequest) (*EmptyResponse, error)
	//
	// Deprecated: Do not use.
	WatchRoute(context.Context, *WatchRouteRequest) (*EmptyResponse, error)
	//
	// Deprecated: Do not use.
	StopWatchRoute(context.Context, *WatchRouteRequest) (*EmptyResponse, error)
	//
	// Deprecated: Do not use.
	UpdateGeo(context.Context, *UpdateGeoRequest) (*EmptyResponse, error)
	//
	// Deprecated: Do not use.
	GetObjectInfo(context.Context, *GetObjectInfoRequest) (*GetObjectInfoResponse, error)
}

// Deprecated: Do not use.
// UnimplementedWatchServer can be embedded to have forward compatible implementations.
type UnimplementedWatchServer struct {
}

func (*UnimplementedWatchServer) WatchGeofence(ctx context.Context, req *WatchGeofenceRequest) (*EmptyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method WatchGeofence not implemented")
}
func (*UnimplementedWatchServer) StopWatchGeofence(ctx context.Context, req *WatchGeofenceRequest) (*EmptyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StopWatchGeofence not implemented")
}
func (*UnimplementedWatchServer) WatchRoom(ctx context.Context, req *WatchRoomRequest) (*EmptyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method WatchRoom not implemented")
}
func (*UnimplementedWatchServer) StopWatchRoom(ctx context.Context, req *WatchRoomRequest) (*EmptyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StopWatchRoom not implemented")
}
func (*UnimplementedWatchServer) WatchRoute(ctx context.Context, req *WatchRouteRequest) (*EmptyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method WatchRoute not implemented")
}
func (*UnimplementedWatchServer) StopWatchRoute(ctx context.Context, req *WatchRouteRequest) (*EmptyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StopWatchRoute not implemented")
}
func (*UnimplementedWatchServer) UpdateGeo(ctx context.Context, req *UpdateGeoRequest) (*EmptyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateGeo not implemented")
}
func (*UnimplementedWatchServer) GetObjectInfo(ctx context.Context, req *GetObjectInfoRequest) (*GetObjectInfoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetObjectInfo not implemented")
}

// Deprecated: Do not use.
func RegisterWatchServer(s *grpc.Server, srv WatchServer) {
	s.RegisterService(&_Watch_serviceDesc, srv)
}

func _Watch_WatchGeofence_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WatchGeofenceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WatchServer).WatchGeofence(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ric.geo.Watch/WatchGeofence",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WatchServer).WatchGeofence(ctx, req.(*WatchGeofenceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Watch_StopWatchGeofence_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WatchGeofenceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WatchServer).StopWatchGeofence(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ric.geo.Watch/StopWatchGeofence",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WatchServer).StopWatchGeofence(ctx, req.(*WatchGeofenceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Watch_WatchRoom_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WatchRoomRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WatchServer).WatchRoom(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ric.geo.Watch/WatchRoom",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WatchServer).WatchRoom(ctx, req.(*WatchRoomRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Watch_StopWatchRoom_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WatchRoomRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WatchServer).StopWatchRoom(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ric.geo.Watch/StopWatchRoom",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WatchServer).StopWatchRoom(ctx, req.(*WatchRoomRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Watch_WatchRoute_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WatchRouteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WatchServer).WatchRoute(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ric.geo.Watch/WatchRoute",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WatchServer).WatchRoute(ctx, req.(*WatchRouteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Watch_StopWatchRoute_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WatchRouteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WatchServer).StopWatchRoute(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ric.geo.Watch/StopWatchRoute",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WatchServer).StopWatchRoute(ctx, req.(*WatchRouteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Watch_UpdateGeo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateGeoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WatchServer).UpdateGeo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ric.geo.Watch/UpdateGeo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WatchServer).UpdateGeo(ctx, req.(*UpdateGeoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Watch_GetObjectInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetObjectInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WatchServer).GetObjectInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ric.geo.Watch/GetObjectInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WatchServer).GetObjectInfo(ctx, req.(*GetObjectInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Watch_serviceDesc = grpc.ServiceDesc{
	ServiceName: "ric.geo.Watch",
	HandlerType: (*WatchServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "WatchGeofence",
			Handler:    _Watch_WatchGeofence_Handler,
		},
		{
			MethodName: "StopWatchGeofence",
			Handler:    _Watch_StopWatchGeofence_Handler,
		},
		{
			MethodName: "WatchRoom",
			Handler:    _Watch_WatchRoom_Handler,
		},
		{
			MethodName: "StopWatchRoom",
			Handler:    _Watch_StopWatchRoom_Handler,
		},
		{
			MethodName: "WatchRoute",
			Handler:    _Watch_WatchRoute_Handler,
		},
		{
			MethodName: "StopWatchRoute",
			Handler:    _Watch_StopWatchRoute_Handler,
		},
		{
			MethodName: "UpdateGeo",
			Handler:    _Watch_UpdateGeo_Handler,
		},
		{
			MethodName: "GetObjectInfo",
			Handler:    _Watch_GetObjectInfo_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "ric-geo/ricgeo.proto",
}

// WatchV2Client is the client API for WatchV2 service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type WatchV2Client interface {
	Watch(ctx context.Context, in *WatchRequest, opts ...grpc.CallOption) (*EmptyResponse, error)
	Stop(ctx context.Context, in *StopRequest, opts ...grpc.CallOption) (*EmptyResponse, error)
	UpdateGeo(ctx context.Context, in *UpdateGeoRequest, opts ...grpc.CallOption) (*EmptyResponse, error)
	GetObjectInfo(ctx context.Context, in *GetObjectInfoRequest, opts ...grpc.CallOption) (*GetObjectInfoResponse, error)
}

type watchV2Client struct {
	cc *grpc.ClientConn
}

func NewWatchV2Client(cc *grpc.ClientConn) WatchV2Client {
	return &watchV2Client{cc}
}

func (c *watchV2Client) Watch(ctx context.Context, in *WatchRequest, opts ...grpc.CallOption) (*EmptyResponse, error) {
	out := new(EmptyResponse)
	err := c.cc.Invoke(ctx, "/ric.geo.WatchV2/Watch", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *watchV2Client) Stop(ctx context.Context, in *StopRequest, opts ...grpc.CallOption) (*EmptyResponse, error) {
	out := new(EmptyResponse)
	err := c.cc.Invoke(ctx, "/ric.geo.WatchV2/Stop", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *watchV2Client) UpdateGeo(ctx context.Context, in *UpdateGeoRequest, opts ...grpc.CallOption) (*EmptyResponse, error) {
	out := new(EmptyResponse)
	err := c.cc.Invoke(ctx, "/ric.geo.WatchV2/UpdateGeo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *watchV2Client) GetObjectInfo(ctx context.Context, in *GetObjectInfoRequest, opts ...grpc.CallOption) (*GetObjectInfoResponse, error) {
	out := new(GetObjectInfoResponse)
	err := c.cc.Invoke(ctx, "/ric.geo.WatchV2/GetObjectInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// WatchV2Server is the server API for WatchV2 service.
type WatchV2Server interface {
	Watch(context.Context, *WatchRequest) (*EmptyResponse, error)
	Stop(context.Context, *StopRequest) (*EmptyResponse, error)
	UpdateGeo(context.Context, *UpdateGeoRequest) (*EmptyResponse, error)
	GetObjectInfo(context.Context, *GetObjectInfoRequest) (*GetObjectInfoResponse, error)
}

// UnimplementedWatchV2Server can be embedded to have forward compatible implementations.
type UnimplementedWatchV2Server struct {
}

func (*UnimplementedWatchV2Server) Watch(ctx context.Context, req *WatchRequest) (*EmptyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Watch not implemented")
}
func (*UnimplementedWatchV2Server) Stop(ctx context.Context, req *StopRequest) (*EmptyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Stop not implemented")
}
func (*UnimplementedWatchV2Server) UpdateGeo(ctx context.Context, req *UpdateGeoRequest) (*EmptyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateGeo not implemented")
}
func (*UnimplementedWatchV2Server) GetObjectInfo(ctx context.Context, req *GetObjectInfoRequest) (*GetObjectInfoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetObjectInfo not implemented")
}

func RegisterWatchV2Server(s *grpc.Server, srv WatchV2Server) {
	s.RegisterService(&_WatchV2_serviceDesc, srv)
}

func _WatchV2_Watch_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WatchRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WatchV2Server).Watch(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ric.geo.WatchV2/Watch",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WatchV2Server).Watch(ctx, req.(*WatchRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WatchV2_Stop_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StopRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WatchV2Server).Stop(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ric.geo.WatchV2/Stop",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WatchV2Server).Stop(ctx, req.(*StopRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WatchV2_UpdateGeo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateGeoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WatchV2Server).UpdateGeo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ric.geo.WatchV2/UpdateGeo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WatchV2Server).UpdateGeo(ctx, req.(*UpdateGeoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WatchV2_GetObjectInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetObjectInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WatchV2Server).GetObjectInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ric.geo.WatchV2/GetObjectInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WatchV2Server).GetObjectInfo(ctx, req.(*GetObjectInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _WatchV2_serviceDesc = grpc.ServiceDesc{
	ServiceName: "ric.geo.WatchV2",
	HandlerType: (*WatchV2Server)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Watch",
			Handler:    _WatchV2_Watch_Handler,
		},
		{
			MethodName: "Stop",
			Handler:    _WatchV2_Stop_Handler,
		},
		{
			MethodName: "UpdateGeo",
			Handler:    _WatchV2_UpdateGeo_Handler,
		},
		{
			MethodName: "GetObjectInfo",
			Handler:    _WatchV2_GetObjectInfo_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "ric-geo/ricgeo.proto",
}

// AttendanceControlClient is the client API for AttendanceControl service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AttendanceControlClient interface {
	Control(ctx context.Context, in *ControlRequest, opts ...grpc.CallOption) (*EmptyResponse, error)
}

type attendanceControlClient struct {
	cc *grpc.ClientConn
}

func NewAttendanceControlClient(cc *grpc.ClientConn) AttendanceControlClient {
	return &attendanceControlClient{cc}
}

func (c *attendanceControlClient) Control(ctx context.Context, in *ControlRequest, opts ...grpc.CallOption) (*EmptyResponse, error) {
	out := new(EmptyResponse)
	err := c.cc.Invoke(ctx, "/ric.geo.AttendanceControl/Control", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AttendanceControlServer is the server API for AttendanceControl service.
type AttendanceControlServer interface {
	Control(context.Context, *ControlRequest) (*EmptyResponse, error)
}

// UnimplementedAttendanceControlServer can be embedded to have forward compatible implementations.
type UnimplementedAttendanceControlServer struct {
}

func (*UnimplementedAttendanceControlServer) Control(ctx context.Context, req *ControlRequest) (*EmptyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Control not implemented")
}

func RegisterAttendanceControlServer(s *grpc.Server, srv AttendanceControlServer) {
	s.RegisterService(&_AttendanceControl_serviceDesc, srv)
}

func _AttendanceControl_Control_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ControlRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AttendanceControlServer).Control(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ric.geo.AttendanceControl/Control",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AttendanceControlServer).Control(ctx, req.(*ControlRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _AttendanceControl_serviceDesc = grpc.ServiceDesc{
	ServiceName: "ric.geo.AttendanceControl",
	HandlerType: (*AttendanceControlServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Control",
			Handler:    _AttendanceControl_Control_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "ric-geo/ricgeo.proto",
}

// OsmClient is the client API for Osm service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type OsmClient interface {
	Geocode(ctx context.Context, in *GeocodeRequest, opts ...grpc.CallOption) (*OsmResponse, error)
	GeocodeReverse(ctx context.Context, in *GeocodeReverseRequest, opts ...grpc.CallOption) (*OsmResponse, error)
	GetRoute(ctx context.Context, in *GetRouteRequest, opts ...grpc.CallOption) (*OsmResponse, error)
}

type osmClient struct {
	cc *grpc.ClientConn
}

func NewOsmClient(cc *grpc.ClientConn) OsmClient {
	return &osmClient{cc}
}

func (c *osmClient) Geocode(ctx context.Context, in *GeocodeRequest, opts ...grpc.CallOption) (*OsmResponse, error) {
	out := new(OsmResponse)
	err := c.cc.Invoke(ctx, "/ric.geo.Osm/Geocode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *osmClient) GeocodeReverse(ctx context.Context, in *GeocodeReverseRequest, opts ...grpc.CallOption) (*OsmResponse, error) {
	out := new(OsmResponse)
	err := c.cc.Invoke(ctx, "/ric.geo.Osm/GeocodeReverse", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *osmClient) GetRoute(ctx context.Context, in *GetRouteRequest, opts ...grpc.CallOption) (*OsmResponse, error) {
	out := new(OsmResponse)
	err := c.cc.Invoke(ctx, "/ric.geo.Osm/GetRoute", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// OsmServer is the server API for Osm service.
type OsmServer interface {
	Geocode(context.Context, *GeocodeRequest) (*OsmResponse, error)
	GeocodeReverse(context.Context, *GeocodeReverseRequest) (*OsmResponse, error)
	GetRoute(context.Context, *GetRouteRequest) (*OsmResponse, error)
}

// UnimplementedOsmServer can be embedded to have forward compatible implementations.
type UnimplementedOsmServer struct {
}

func (*UnimplementedOsmServer) Geocode(ctx context.Context, req *GeocodeRequest) (*OsmResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Geocode not implemented")
}
func (*UnimplementedOsmServer) GeocodeReverse(ctx context.Context, req *GeocodeReverseRequest) (*OsmResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GeocodeReverse not implemented")
}
func (*UnimplementedOsmServer) GetRoute(ctx context.Context, req *GetRouteRequest) (*OsmResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetRoute not implemented")
}

func RegisterOsmServer(s *grpc.Server, srv OsmServer) {
	s.RegisterService(&_Osm_serviceDesc, srv)
}

func _Osm_Geocode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GeocodeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OsmServer).Geocode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ric.geo.Osm/Geocode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OsmServer).Geocode(ctx, req.(*GeocodeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Osm_GeocodeReverse_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GeocodeReverseRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OsmServer).GeocodeReverse(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ric.geo.Osm/GeocodeReverse",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OsmServer).GeocodeReverse(ctx, req.(*GeocodeReverseRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Osm_GetRoute_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRouteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OsmServer).GetRoute(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ric.geo.Osm/GetRoute",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OsmServer).GetRoute(ctx, req.(*GetRouteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Osm_serviceDesc = grpc.ServiceDesc{
	ServiceName: "ric.geo.Osm",
	HandlerType: (*OsmServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Geocode",
			Handler:    _Osm_Geocode_Handler,
		},
		{
			MethodName: "GeocodeReverse",
			Handler:    _Osm_GeocodeReverse_Handler,
		},
		{
			MethodName: "GetRoute",
			Handler:    _Osm_GetRoute_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "ric-geo/ricgeo.proto",
}

// CheckClient is the client API for Check service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CheckClient interface {
	CheckIn(ctx context.Context, in *CheckInRequest, opts ...grpc.CallOption) (*CheckInResponse, error)
}

type checkClient struct {
	cc *grpc.ClientConn
}

func NewCheckClient(cc *grpc.ClientConn) CheckClient {
	return &checkClient{cc}
}

func (c *checkClient) CheckIn(ctx context.Context, in *CheckInRequest, opts ...grpc.CallOption) (*CheckInResponse, error) {
	out := new(CheckInResponse)
	err := c.cc.Invoke(ctx, "/ric.geo.Check/CheckIn", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CheckServer is the server API for Check service.
type CheckServer interface {
	CheckIn(context.Context, *CheckInRequest) (*CheckInResponse, error)
}

// UnimplementedCheckServer can be embedded to have forward compatible implementations.
type UnimplementedCheckServer struct {
}

func (*UnimplementedCheckServer) CheckIn(ctx context.Context, req *CheckInRequest) (*CheckInResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CheckIn not implemented")
}

func RegisterCheckServer(s *grpc.Server, srv CheckServer) {
	s.RegisterService(&_Check_serviceDesc, srv)
}

func _Check_CheckIn_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CheckInRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CheckServer).CheckIn(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ric.geo.Check/CheckIn",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CheckServer).CheckIn(ctx, req.(*CheckInRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Check_serviceDesc = grpc.ServiceDesc{
	ServiceName: "ric.geo.Check",
	HandlerType: (*CheckServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CheckIn",
			Handler:    _Check_CheckIn_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "ric-geo/ricgeo.proto",
}
