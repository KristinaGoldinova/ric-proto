// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ric-store/ricstore.proto

#ifndef PROTOBUF_INCLUDED_ric_2dstore_2fricstore_2eproto
#define PROTOBUF_INCLUDED_ric_2dstore_2fricstore_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3007000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3007000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_ric_2dstore_2fricstore_2eproto

// Internal implementation detail -- do not use these members.
struct TableStruct_ric_2dstore_2fricstore_2eproto {
  static const ::google::protobuf::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::ParseTable schema[9]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors_ric_2dstore_2fricstore_2eproto();
namespace ric {
namespace store {
class CreateCollectionRequest;
class CreateCollectionRequestDefaultTypeInternal;
extern CreateCollectionRequestDefaultTypeInternal _CreateCollectionRequest_default_instance_;
class CreateDatabaseRequest;
class CreateDatabaseRequestDefaultTypeInternal;
extern CreateDatabaseRequestDefaultTypeInternal _CreateDatabaseRequest_default_instance_;
class EmptyRespone;
class EmptyResponeDefaultTypeInternal;
extern EmptyResponeDefaultTypeInternal _EmptyRespone_default_instance_;
class Packet;
class PacketDefaultTypeInternal;
extern PacketDefaultTypeInternal _Packet_default_instance_;
class QueryRequest;
class QueryRequestDefaultTypeInternal;
extern QueryRequestDefaultTypeInternal _QueryRequest_default_instance_;
class RemoveCollectionRequest;
class RemoveCollectionRequestDefaultTypeInternal;
extern RemoveCollectionRequestDefaultTypeInternal _RemoveCollectionRequest_default_instance_;
class RemoveDatabaseRequest;
class RemoveDatabaseRequestDefaultTypeInternal;
extern RemoveDatabaseRequestDefaultTypeInternal _RemoveDatabaseRequest_default_instance_;
class StatusRequest;
class StatusRequestDefaultTypeInternal;
extern StatusRequestDefaultTypeInternal _StatusRequest_default_instance_;
class StatusResponse;
class StatusResponseDefaultTypeInternal;
extern StatusResponseDefaultTypeInternal _StatusResponse_default_instance_;
}  // namespace store
}  // namespace ric
namespace google {
namespace protobuf {
template<> ::ric::store::CreateCollectionRequest* Arena::CreateMaybeMessage<::ric::store::CreateCollectionRequest>(Arena*);
template<> ::ric::store::CreateDatabaseRequest* Arena::CreateMaybeMessage<::ric::store::CreateDatabaseRequest>(Arena*);
template<> ::ric::store::EmptyRespone* Arena::CreateMaybeMessage<::ric::store::EmptyRespone>(Arena*);
template<> ::ric::store::Packet* Arena::CreateMaybeMessage<::ric::store::Packet>(Arena*);
template<> ::ric::store::QueryRequest* Arena::CreateMaybeMessage<::ric::store::QueryRequest>(Arena*);
template<> ::ric::store::RemoveCollectionRequest* Arena::CreateMaybeMessage<::ric::store::RemoveCollectionRequest>(Arena*);
template<> ::ric::store::RemoveDatabaseRequest* Arena::CreateMaybeMessage<::ric::store::RemoveDatabaseRequest>(Arena*);
template<> ::ric::store::StatusRequest* Arena::CreateMaybeMessage<::ric::store::StatusRequest>(Arena*);
template<> ::ric::store::StatusResponse* Arena::CreateMaybeMessage<::ric::store::StatusResponse>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace ric {
namespace store {

enum Mode {
  UNKNOWN = 0,
  NOMERGE = 1,
  MERGE = 2,
  Mode_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::min(),
  Mode_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::max()
};
bool Mode_IsValid(int value);
const Mode Mode_MIN = UNKNOWN;
const Mode Mode_MAX = MERGE;
const int Mode_ARRAYSIZE = Mode_MAX + 1;

const ::google::protobuf::EnumDescriptor* Mode_descriptor();
inline const ::std::string& Mode_Name(Mode value) {
  return ::google::protobuf::internal::NameOfEnum(
    Mode_descriptor(), value);
}
inline bool Mode_Parse(
    const ::std::string& name, Mode* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Mode>(
    Mode_descriptor(), name, value);
}
// ===================================================================

class EmptyRespone final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ric.store.EmptyRespone) */ {
 public:
  EmptyRespone();
  virtual ~EmptyRespone();

  EmptyRespone(const EmptyRespone& from);

  inline EmptyRespone& operator=(const EmptyRespone& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EmptyRespone(EmptyRespone&& from) noexcept
    : EmptyRespone() {
    *this = ::std::move(from);
  }

  inline EmptyRespone& operator=(EmptyRespone&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const EmptyRespone& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const EmptyRespone* internal_default_instance() {
    return reinterpret_cast<const EmptyRespone*>(
               &_EmptyRespone_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(EmptyRespone* other);
  friend void swap(EmptyRespone& a, EmptyRespone& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EmptyRespone* New() const final {
    return CreateMaybeMessage<EmptyRespone>(nullptr);
  }

  EmptyRespone* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<EmptyRespone>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const EmptyRespone& from);
  void MergeFrom(const EmptyRespone& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(EmptyRespone* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:ric.store.EmptyRespone)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_ric_2dstore_2fricstore_2eproto;
};
// -------------------------------------------------------------------

class Packet final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ric.store.Packet) */ {
 public:
  Packet();
  virtual ~Packet();

  Packet(const Packet& from);

  inline Packet& operator=(const Packet& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Packet(Packet&& from) noexcept
    : Packet() {
    *this = ::std::move(from);
  }

  inline Packet& operator=(Packet&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const Packet& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Packet* internal_default_instance() {
    return reinterpret_cast<const Packet*>(
               &_Packet_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(Packet* other);
  friend void swap(Packet& a, Packet& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Packet* New() const final {
    return CreateMaybeMessage<Packet>(nullptr);
  }

  Packet* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Packet>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Packet& from);
  void MergeFrom(const Packet& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Packet* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string db = 1;
  void clear_db();
  static const int kDbFieldNumber = 1;
  const ::std::string& db() const;
  void set_db(const ::std::string& value);
  #if LANG_CXX11
  void set_db(::std::string&& value);
  #endif
  void set_db(const char* value);
  void set_db(const char* value, size_t size);
  ::std::string* mutable_db();
  ::std::string* release_db();
  void set_allocated_db(::std::string* db);

  // string col = 2;
  void clear_col();
  static const int kColFieldNumber = 2;
  const ::std::string& col() const;
  void set_col(const ::std::string& value);
  #if LANG_CXX11
  void set_col(::std::string&& value);
  #endif
  void set_col(const char* value);
  void set_col(const char* value, size_t size);
  ::std::string* mutable_col();
  ::std::string* release_col();
  void set_allocated_col(::std::string* col);

  // bytes data = 4;
  void clear_data();
  static const int kDataFieldNumber = 4;
  const ::std::string& data() const;
  void set_data(const ::std::string& value);
  #if LANG_CXX11
  void set_data(::std::string&& value);
  #endif
  void set_data(const char* value);
  void set_data(const void* value, size_t size);
  ::std::string* mutable_data();
  ::std::string* release_data();
  void set_allocated_data(::std::string* data);

  // uint64 ts = 3;
  void clear_ts();
  static const int kTsFieldNumber = 3;
  ::google::protobuf::uint64 ts() const;
  void set_ts(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:ric.store.Packet)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr db_;
  ::google::protobuf::internal::ArenaStringPtr col_;
  ::google::protobuf::internal::ArenaStringPtr data_;
  ::google::protobuf::uint64 ts_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_ric_2dstore_2fricstore_2eproto;
};
// -------------------------------------------------------------------

class QueryRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ric.store.QueryRequest) */ {
 public:
  QueryRequest();
  virtual ~QueryRequest();

  QueryRequest(const QueryRequest& from);

  inline QueryRequest& operator=(const QueryRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  QueryRequest(QueryRequest&& from) noexcept
    : QueryRequest() {
    *this = ::std::move(from);
  }

  inline QueryRequest& operator=(QueryRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const QueryRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const QueryRequest* internal_default_instance() {
    return reinterpret_cast<const QueryRequest*>(
               &_QueryRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(QueryRequest* other);
  friend void swap(QueryRequest& a, QueryRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline QueryRequest* New() const final {
    return CreateMaybeMessage<QueryRequest>(nullptr);
  }

  QueryRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<QueryRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const QueryRequest& from);
  void MergeFrom(const QueryRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(QueryRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string fields = 5;
  int fields_size() const;
  void clear_fields();
  static const int kFieldsFieldNumber = 5;
  const ::std::string& fields(int index) const;
  ::std::string* mutable_fields(int index);
  void set_fields(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_fields(int index, ::std::string&& value);
  #endif
  void set_fields(int index, const char* value);
  void set_fields(int index, const char* value, size_t size);
  ::std::string* add_fields();
  void add_fields(const ::std::string& value);
  #if LANG_CXX11
  void add_fields(::std::string&& value);
  #endif
  void add_fields(const char* value);
  void add_fields(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField<::std::string>& fields() const;
  ::google::protobuf::RepeatedPtrField<::std::string>* mutable_fields();

  // string db = 1;
  void clear_db();
  static const int kDbFieldNumber = 1;
  const ::std::string& db() const;
  void set_db(const ::std::string& value);
  #if LANG_CXX11
  void set_db(::std::string&& value);
  #endif
  void set_db(const char* value);
  void set_db(const char* value, size_t size);
  ::std::string* mutable_db();
  ::std::string* release_db();
  void set_allocated_db(::std::string* db);

  // string col = 2;
  void clear_col();
  static const int kColFieldNumber = 2;
  const ::std::string& col() const;
  void set_col(const ::std::string& value);
  #if LANG_CXX11
  void set_col(::std::string&& value);
  #endif
  void set_col(const char* value);
  void set_col(const char* value, size_t size);
  ::std::string* mutable_col();
  ::std::string* release_col();
  void set_allocated_col(::std::string* col);

  // uint64 from = 3;
  void clear_from();
  static const int kFromFieldNumber = 3;
  ::google::protobuf::uint64 from() const;
  void set_from(::google::protobuf::uint64 value);

  // uint64 to = 4;
  void clear_to();
  static const int kToFieldNumber = 4;
  ::google::protobuf::uint64 to() const;
  void set_to(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:ric.store.QueryRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField<::std::string> fields_;
  ::google::protobuf::internal::ArenaStringPtr db_;
  ::google::protobuf::internal::ArenaStringPtr col_;
  ::google::protobuf::uint64 from_;
  ::google::protobuf::uint64 to_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_ric_2dstore_2fricstore_2eproto;
};
// -------------------------------------------------------------------

class CreateCollectionRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ric.store.CreateCollectionRequest) */ {
 public:
  CreateCollectionRequest();
  virtual ~CreateCollectionRequest();

  CreateCollectionRequest(const CreateCollectionRequest& from);

  inline CreateCollectionRequest& operator=(const CreateCollectionRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CreateCollectionRequest(CreateCollectionRequest&& from) noexcept
    : CreateCollectionRequest() {
    *this = ::std::move(from);
  }

  inline CreateCollectionRequest& operator=(CreateCollectionRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CreateCollectionRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CreateCollectionRequest* internal_default_instance() {
    return reinterpret_cast<const CreateCollectionRequest*>(
               &_CreateCollectionRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(CreateCollectionRequest* other);
  friend void swap(CreateCollectionRequest& a, CreateCollectionRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CreateCollectionRequest* New() const final {
    return CreateMaybeMessage<CreateCollectionRequest>(nullptr);
  }

  CreateCollectionRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CreateCollectionRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CreateCollectionRequest& from);
  void MergeFrom(const CreateCollectionRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CreateCollectionRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string db = 1;
  void clear_db();
  static const int kDbFieldNumber = 1;
  const ::std::string& db() const;
  void set_db(const ::std::string& value);
  #if LANG_CXX11
  void set_db(::std::string&& value);
  #endif
  void set_db(const char* value);
  void set_db(const char* value, size_t size);
  ::std::string* mutable_db();
  ::std::string* release_db();
  void set_allocated_db(::std::string* db);

  // string col = 2;
  void clear_col();
  static const int kColFieldNumber = 2;
  const ::std::string& col() const;
  void set_col(const ::std::string& value);
  #if LANG_CXX11
  void set_col(::std::string&& value);
  #endif
  void set_col(const char* value);
  void set_col(const char* value, size_t size);
  ::std::string* mutable_col();
  ::std::string* release_col();
  void set_allocated_col(::std::string* col);

  // uint64 size = 3;
  void clear_size();
  static const int kSizeFieldNumber = 3;
  ::google::protobuf::uint64 size() const;
  void set_size(::google::protobuf::uint64 value);

  // .ric.store.Mode mode = 4;
  void clear_mode();
  static const int kModeFieldNumber = 4;
  ::ric::store::Mode mode() const;
  void set_mode(::ric::store::Mode value);

  // @@protoc_insertion_point(class_scope:ric.store.CreateCollectionRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr db_;
  ::google::protobuf::internal::ArenaStringPtr col_;
  ::google::protobuf::uint64 size_;
  int mode_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_ric_2dstore_2fricstore_2eproto;
};
// -------------------------------------------------------------------

class RemoveCollectionRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ric.store.RemoveCollectionRequest) */ {
 public:
  RemoveCollectionRequest();
  virtual ~RemoveCollectionRequest();

  RemoveCollectionRequest(const RemoveCollectionRequest& from);

  inline RemoveCollectionRequest& operator=(const RemoveCollectionRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RemoveCollectionRequest(RemoveCollectionRequest&& from) noexcept
    : RemoveCollectionRequest() {
    *this = ::std::move(from);
  }

  inline RemoveCollectionRequest& operator=(RemoveCollectionRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const RemoveCollectionRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RemoveCollectionRequest* internal_default_instance() {
    return reinterpret_cast<const RemoveCollectionRequest*>(
               &_RemoveCollectionRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(RemoveCollectionRequest* other);
  friend void swap(RemoveCollectionRequest& a, RemoveCollectionRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RemoveCollectionRequest* New() const final {
    return CreateMaybeMessage<RemoveCollectionRequest>(nullptr);
  }

  RemoveCollectionRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<RemoveCollectionRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const RemoveCollectionRequest& from);
  void MergeFrom(const RemoveCollectionRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RemoveCollectionRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string db = 1;
  void clear_db();
  static const int kDbFieldNumber = 1;
  const ::std::string& db() const;
  void set_db(const ::std::string& value);
  #if LANG_CXX11
  void set_db(::std::string&& value);
  #endif
  void set_db(const char* value);
  void set_db(const char* value, size_t size);
  ::std::string* mutable_db();
  ::std::string* release_db();
  void set_allocated_db(::std::string* db);

  // string col = 2;
  void clear_col();
  static const int kColFieldNumber = 2;
  const ::std::string& col() const;
  void set_col(const ::std::string& value);
  #if LANG_CXX11
  void set_col(::std::string&& value);
  #endif
  void set_col(const char* value);
  void set_col(const char* value, size_t size);
  ::std::string* mutable_col();
  ::std::string* release_col();
  void set_allocated_col(::std::string* col);

  // @@protoc_insertion_point(class_scope:ric.store.RemoveCollectionRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr db_;
  ::google::protobuf::internal::ArenaStringPtr col_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_ric_2dstore_2fricstore_2eproto;
};
// -------------------------------------------------------------------

class CreateDatabaseRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ric.store.CreateDatabaseRequest) */ {
 public:
  CreateDatabaseRequest();
  virtual ~CreateDatabaseRequest();

  CreateDatabaseRequest(const CreateDatabaseRequest& from);

  inline CreateDatabaseRequest& operator=(const CreateDatabaseRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CreateDatabaseRequest(CreateDatabaseRequest&& from) noexcept
    : CreateDatabaseRequest() {
    *this = ::std::move(from);
  }

  inline CreateDatabaseRequest& operator=(CreateDatabaseRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CreateDatabaseRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CreateDatabaseRequest* internal_default_instance() {
    return reinterpret_cast<const CreateDatabaseRequest*>(
               &_CreateDatabaseRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(CreateDatabaseRequest* other);
  friend void swap(CreateDatabaseRequest& a, CreateDatabaseRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CreateDatabaseRequest* New() const final {
    return CreateMaybeMessage<CreateDatabaseRequest>(nullptr);
  }

  CreateDatabaseRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CreateDatabaseRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CreateDatabaseRequest& from);
  void MergeFrom(const CreateDatabaseRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CreateDatabaseRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string db = 1;
  void clear_db();
  static const int kDbFieldNumber = 1;
  const ::std::string& db() const;
  void set_db(const ::std::string& value);
  #if LANG_CXX11
  void set_db(::std::string&& value);
  #endif
  void set_db(const char* value);
  void set_db(const char* value, size_t size);
  ::std::string* mutable_db();
  ::std::string* release_db();
  void set_allocated_db(::std::string* db);

  // @@protoc_insertion_point(class_scope:ric.store.CreateDatabaseRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr db_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_ric_2dstore_2fricstore_2eproto;
};
// -------------------------------------------------------------------

class RemoveDatabaseRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ric.store.RemoveDatabaseRequest) */ {
 public:
  RemoveDatabaseRequest();
  virtual ~RemoveDatabaseRequest();

  RemoveDatabaseRequest(const RemoveDatabaseRequest& from);

  inline RemoveDatabaseRequest& operator=(const RemoveDatabaseRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RemoveDatabaseRequest(RemoveDatabaseRequest&& from) noexcept
    : RemoveDatabaseRequest() {
    *this = ::std::move(from);
  }

  inline RemoveDatabaseRequest& operator=(RemoveDatabaseRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const RemoveDatabaseRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RemoveDatabaseRequest* internal_default_instance() {
    return reinterpret_cast<const RemoveDatabaseRequest*>(
               &_RemoveDatabaseRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void Swap(RemoveDatabaseRequest* other);
  friend void swap(RemoveDatabaseRequest& a, RemoveDatabaseRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RemoveDatabaseRequest* New() const final {
    return CreateMaybeMessage<RemoveDatabaseRequest>(nullptr);
  }

  RemoveDatabaseRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<RemoveDatabaseRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const RemoveDatabaseRequest& from);
  void MergeFrom(const RemoveDatabaseRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RemoveDatabaseRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string db = 1;
  void clear_db();
  static const int kDbFieldNumber = 1;
  const ::std::string& db() const;
  void set_db(const ::std::string& value);
  #if LANG_CXX11
  void set_db(::std::string&& value);
  #endif
  void set_db(const char* value);
  void set_db(const char* value, size_t size);
  ::std::string* mutable_db();
  ::std::string* release_db();
  void set_allocated_db(::std::string* db);

  // @@protoc_insertion_point(class_scope:ric.store.RemoveDatabaseRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr db_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_ric_2dstore_2fricstore_2eproto;
};
// -------------------------------------------------------------------

class StatusRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ric.store.StatusRequest) */ {
 public:
  StatusRequest();
  virtual ~StatusRequest();

  StatusRequest(const StatusRequest& from);

  inline StatusRequest& operator=(const StatusRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  StatusRequest(StatusRequest&& from) noexcept
    : StatusRequest() {
    *this = ::std::move(from);
  }

  inline StatusRequest& operator=(StatusRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const StatusRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const StatusRequest* internal_default_instance() {
    return reinterpret_cast<const StatusRequest*>(
               &_StatusRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  void Swap(StatusRequest* other);
  friend void swap(StatusRequest& a, StatusRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline StatusRequest* New() const final {
    return CreateMaybeMessage<StatusRequest>(nullptr);
  }

  StatusRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<StatusRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const StatusRequest& from);
  void MergeFrom(const StatusRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(StatusRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string db = 1;
  void clear_db();
  static const int kDbFieldNumber = 1;
  const ::std::string& db() const;
  void set_db(const ::std::string& value);
  #if LANG_CXX11
  void set_db(::std::string&& value);
  #endif
  void set_db(const char* value);
  void set_db(const char* value, size_t size);
  ::std::string* mutable_db();
  ::std::string* release_db();
  void set_allocated_db(::std::string* db);

  // string col = 2;
  void clear_col();
  static const int kColFieldNumber = 2;
  const ::std::string& col() const;
  void set_col(const ::std::string& value);
  #if LANG_CXX11
  void set_col(::std::string&& value);
  #endif
  void set_col(const char* value);
  void set_col(const char* value, size_t size);
  ::std::string* mutable_col();
  ::std::string* release_col();
  void set_allocated_col(::std::string* col);

  // @@protoc_insertion_point(class_scope:ric.store.StatusRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr db_;
  ::google::protobuf::internal::ArenaStringPtr col_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_ric_2dstore_2fricstore_2eproto;
};
// -------------------------------------------------------------------

class StatusResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ric.store.StatusResponse) */ {
 public:
  StatusResponse();
  virtual ~StatusResponse();

  StatusResponse(const StatusResponse& from);

  inline StatusResponse& operator=(const StatusResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  StatusResponse(StatusResponse&& from) noexcept
    : StatusResponse() {
    *this = ::std::move(from);
  }

  inline StatusResponse& operator=(StatusResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const StatusResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const StatusResponse* internal_default_instance() {
    return reinterpret_cast<const StatusResponse*>(
               &_StatusResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  void Swap(StatusResponse* other);
  friend void swap(StatusResponse& a, StatusResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline StatusResponse* New() const final {
    return CreateMaybeMessage<StatusResponse>(nullptr);
  }

  StatusResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<StatusResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const StatusResponse& from);
  void MergeFrom(const StatusResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(StatusResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 min_ts = 1;
  void clear_min_ts();
  static const int kMinTsFieldNumber = 1;
  ::google::protobuf::uint64 min_ts() const;
  void set_min_ts(::google::protobuf::uint64 value);

  // uint64 max_ts = 2;
  void clear_max_ts();
  static const int kMaxTsFieldNumber = 2;
  ::google::protobuf::uint64 max_ts() const;
  void set_max_ts(::google::protobuf::uint64 value);

  // uint64 count = 3;
  void clear_count();
  static const int kCountFieldNumber = 3;
  ::google::protobuf::uint64 count() const;
  void set_count(::google::protobuf::uint64 value);

  // uint64 size = 4;
  void clear_size();
  static const int kSizeFieldNumber = 4;
  ::google::protobuf::uint64 size() const;
  void set_size(::google::protobuf::uint64 value);

  // uint64 max_size = 5;
  void clear_max_size();
  static const int kMaxSizeFieldNumber = 5;
  ::google::protobuf::uint64 max_size() const;
  void set_max_size(::google::protobuf::uint64 value);

  // .ric.store.Mode mode = 6;
  void clear_mode();
  static const int kModeFieldNumber = 6;
  ::ric::store::Mode mode() const;
  void set_mode(::ric::store::Mode value);

  // @@protoc_insertion_point(class_scope:ric.store.StatusResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 min_ts_;
  ::google::protobuf::uint64 max_ts_;
  ::google::protobuf::uint64 count_;
  ::google::protobuf::uint64 size_;
  ::google::protobuf::uint64 max_size_;
  int mode_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_ric_2dstore_2fricstore_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// EmptyRespone

// -------------------------------------------------------------------

// Packet

// string db = 1;
inline void Packet::clear_db() {
  db_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Packet::db() const {
  // @@protoc_insertion_point(field_get:ric.store.Packet.db)
  return db_.GetNoArena();
}
inline void Packet::set_db(const ::std::string& value) {
  
  db_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ric.store.Packet.db)
}
#if LANG_CXX11
inline void Packet::set_db(::std::string&& value) {
  
  db_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ric.store.Packet.db)
}
#endif
inline void Packet::set_db(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  db_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ric.store.Packet.db)
}
inline void Packet::set_db(const char* value, size_t size) {
  
  db_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ric.store.Packet.db)
}
inline ::std::string* Packet::mutable_db() {
  
  // @@protoc_insertion_point(field_mutable:ric.store.Packet.db)
  return db_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Packet::release_db() {
  // @@protoc_insertion_point(field_release:ric.store.Packet.db)
  
  return db_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Packet::set_allocated_db(::std::string* db) {
  if (db != nullptr) {
    
  } else {
    
  }
  db_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), db);
  // @@protoc_insertion_point(field_set_allocated:ric.store.Packet.db)
}

// string col = 2;
inline void Packet::clear_col() {
  col_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Packet::col() const {
  // @@protoc_insertion_point(field_get:ric.store.Packet.col)
  return col_.GetNoArena();
}
inline void Packet::set_col(const ::std::string& value) {
  
  col_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ric.store.Packet.col)
}
#if LANG_CXX11
inline void Packet::set_col(::std::string&& value) {
  
  col_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ric.store.Packet.col)
}
#endif
inline void Packet::set_col(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  col_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ric.store.Packet.col)
}
inline void Packet::set_col(const char* value, size_t size) {
  
  col_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ric.store.Packet.col)
}
inline ::std::string* Packet::mutable_col() {
  
  // @@protoc_insertion_point(field_mutable:ric.store.Packet.col)
  return col_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Packet::release_col() {
  // @@protoc_insertion_point(field_release:ric.store.Packet.col)
  
  return col_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Packet::set_allocated_col(::std::string* col) {
  if (col != nullptr) {
    
  } else {
    
  }
  col_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), col);
  // @@protoc_insertion_point(field_set_allocated:ric.store.Packet.col)
}

// uint64 ts = 3;
inline void Packet::clear_ts() {
  ts_ = PROTOBUF_ULONGLONG(0);
}
inline ::google::protobuf::uint64 Packet::ts() const {
  // @@protoc_insertion_point(field_get:ric.store.Packet.ts)
  return ts_;
}
inline void Packet::set_ts(::google::protobuf::uint64 value) {
  
  ts_ = value;
  // @@protoc_insertion_point(field_set:ric.store.Packet.ts)
}

// bytes data = 4;
inline void Packet::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Packet::data() const {
  // @@protoc_insertion_point(field_get:ric.store.Packet.data)
  return data_.GetNoArena();
}
inline void Packet::set_data(const ::std::string& value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ric.store.Packet.data)
}
#if LANG_CXX11
inline void Packet::set_data(::std::string&& value) {
  
  data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ric.store.Packet.data)
}
#endif
inline void Packet::set_data(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ric.store.Packet.data)
}
inline void Packet::set_data(const void* value, size_t size) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ric.store.Packet.data)
}
inline ::std::string* Packet::mutable_data() {
  
  // @@protoc_insertion_point(field_mutable:ric.store.Packet.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Packet::release_data() {
  // @@protoc_insertion_point(field_release:ric.store.Packet.data)
  
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Packet::set_allocated_data(::std::string* data) {
  if (data != nullptr) {
    
  } else {
    
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:ric.store.Packet.data)
}

// -------------------------------------------------------------------

// QueryRequest

// string db = 1;
inline void QueryRequest::clear_db() {
  db_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& QueryRequest::db() const {
  // @@protoc_insertion_point(field_get:ric.store.QueryRequest.db)
  return db_.GetNoArena();
}
inline void QueryRequest::set_db(const ::std::string& value) {
  
  db_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ric.store.QueryRequest.db)
}
#if LANG_CXX11
inline void QueryRequest::set_db(::std::string&& value) {
  
  db_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ric.store.QueryRequest.db)
}
#endif
inline void QueryRequest::set_db(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  db_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ric.store.QueryRequest.db)
}
inline void QueryRequest::set_db(const char* value, size_t size) {
  
  db_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ric.store.QueryRequest.db)
}
inline ::std::string* QueryRequest::mutable_db() {
  
  // @@protoc_insertion_point(field_mutable:ric.store.QueryRequest.db)
  return db_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QueryRequest::release_db() {
  // @@protoc_insertion_point(field_release:ric.store.QueryRequest.db)
  
  return db_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QueryRequest::set_allocated_db(::std::string* db) {
  if (db != nullptr) {
    
  } else {
    
  }
  db_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), db);
  // @@protoc_insertion_point(field_set_allocated:ric.store.QueryRequest.db)
}

// string col = 2;
inline void QueryRequest::clear_col() {
  col_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& QueryRequest::col() const {
  // @@protoc_insertion_point(field_get:ric.store.QueryRequest.col)
  return col_.GetNoArena();
}
inline void QueryRequest::set_col(const ::std::string& value) {
  
  col_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ric.store.QueryRequest.col)
}
#if LANG_CXX11
inline void QueryRequest::set_col(::std::string&& value) {
  
  col_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ric.store.QueryRequest.col)
}
#endif
inline void QueryRequest::set_col(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  col_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ric.store.QueryRequest.col)
}
inline void QueryRequest::set_col(const char* value, size_t size) {
  
  col_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ric.store.QueryRequest.col)
}
inline ::std::string* QueryRequest::mutable_col() {
  
  // @@protoc_insertion_point(field_mutable:ric.store.QueryRequest.col)
  return col_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QueryRequest::release_col() {
  // @@protoc_insertion_point(field_release:ric.store.QueryRequest.col)
  
  return col_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QueryRequest::set_allocated_col(::std::string* col) {
  if (col != nullptr) {
    
  } else {
    
  }
  col_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), col);
  // @@protoc_insertion_point(field_set_allocated:ric.store.QueryRequest.col)
}

// uint64 from = 3;
inline void QueryRequest::clear_from() {
  from_ = PROTOBUF_ULONGLONG(0);
}
inline ::google::protobuf::uint64 QueryRequest::from() const {
  // @@protoc_insertion_point(field_get:ric.store.QueryRequest.from)
  return from_;
}
inline void QueryRequest::set_from(::google::protobuf::uint64 value) {
  
  from_ = value;
  // @@protoc_insertion_point(field_set:ric.store.QueryRequest.from)
}

// uint64 to = 4;
inline void QueryRequest::clear_to() {
  to_ = PROTOBUF_ULONGLONG(0);
}
inline ::google::protobuf::uint64 QueryRequest::to() const {
  // @@protoc_insertion_point(field_get:ric.store.QueryRequest.to)
  return to_;
}
inline void QueryRequest::set_to(::google::protobuf::uint64 value) {
  
  to_ = value;
  // @@protoc_insertion_point(field_set:ric.store.QueryRequest.to)
}

// repeated string fields = 5;
inline int QueryRequest::fields_size() const {
  return fields_.size();
}
inline void QueryRequest::clear_fields() {
  fields_.Clear();
}
inline const ::std::string& QueryRequest::fields(int index) const {
  // @@protoc_insertion_point(field_get:ric.store.QueryRequest.fields)
  return fields_.Get(index);
}
inline ::std::string* QueryRequest::mutable_fields(int index) {
  // @@protoc_insertion_point(field_mutable:ric.store.QueryRequest.fields)
  return fields_.Mutable(index);
}
inline void QueryRequest::set_fields(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:ric.store.QueryRequest.fields)
  fields_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void QueryRequest::set_fields(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:ric.store.QueryRequest.fields)
  fields_.Mutable(index)->assign(std::move(value));
}
#endif
inline void QueryRequest::set_fields(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  fields_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:ric.store.QueryRequest.fields)
}
inline void QueryRequest::set_fields(int index, const char* value, size_t size) {
  fields_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ric.store.QueryRequest.fields)
}
inline ::std::string* QueryRequest::add_fields() {
  // @@protoc_insertion_point(field_add_mutable:ric.store.QueryRequest.fields)
  return fields_.Add();
}
inline void QueryRequest::add_fields(const ::std::string& value) {
  fields_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:ric.store.QueryRequest.fields)
}
#if LANG_CXX11
inline void QueryRequest::add_fields(::std::string&& value) {
  fields_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:ric.store.QueryRequest.fields)
}
#endif
inline void QueryRequest::add_fields(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  fields_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:ric.store.QueryRequest.fields)
}
inline void QueryRequest::add_fields(const char* value, size_t size) {
  fields_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:ric.store.QueryRequest.fields)
}
inline const ::google::protobuf::RepeatedPtrField<::std::string>&
QueryRequest::fields() const {
  // @@protoc_insertion_point(field_list:ric.store.QueryRequest.fields)
  return fields_;
}
inline ::google::protobuf::RepeatedPtrField<::std::string>*
QueryRequest::mutable_fields() {
  // @@protoc_insertion_point(field_mutable_list:ric.store.QueryRequest.fields)
  return &fields_;
}

// -------------------------------------------------------------------

// CreateCollectionRequest

// string db = 1;
inline void CreateCollectionRequest::clear_db() {
  db_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CreateCollectionRequest::db() const {
  // @@protoc_insertion_point(field_get:ric.store.CreateCollectionRequest.db)
  return db_.GetNoArena();
}
inline void CreateCollectionRequest::set_db(const ::std::string& value) {
  
  db_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ric.store.CreateCollectionRequest.db)
}
#if LANG_CXX11
inline void CreateCollectionRequest::set_db(::std::string&& value) {
  
  db_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ric.store.CreateCollectionRequest.db)
}
#endif
inline void CreateCollectionRequest::set_db(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  db_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ric.store.CreateCollectionRequest.db)
}
inline void CreateCollectionRequest::set_db(const char* value, size_t size) {
  
  db_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ric.store.CreateCollectionRequest.db)
}
inline ::std::string* CreateCollectionRequest::mutable_db() {
  
  // @@protoc_insertion_point(field_mutable:ric.store.CreateCollectionRequest.db)
  return db_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CreateCollectionRequest::release_db() {
  // @@protoc_insertion_point(field_release:ric.store.CreateCollectionRequest.db)
  
  return db_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CreateCollectionRequest::set_allocated_db(::std::string* db) {
  if (db != nullptr) {
    
  } else {
    
  }
  db_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), db);
  // @@protoc_insertion_point(field_set_allocated:ric.store.CreateCollectionRequest.db)
}

// string col = 2;
inline void CreateCollectionRequest::clear_col() {
  col_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CreateCollectionRequest::col() const {
  // @@protoc_insertion_point(field_get:ric.store.CreateCollectionRequest.col)
  return col_.GetNoArena();
}
inline void CreateCollectionRequest::set_col(const ::std::string& value) {
  
  col_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ric.store.CreateCollectionRequest.col)
}
#if LANG_CXX11
inline void CreateCollectionRequest::set_col(::std::string&& value) {
  
  col_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ric.store.CreateCollectionRequest.col)
}
#endif
inline void CreateCollectionRequest::set_col(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  col_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ric.store.CreateCollectionRequest.col)
}
inline void CreateCollectionRequest::set_col(const char* value, size_t size) {
  
  col_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ric.store.CreateCollectionRequest.col)
}
inline ::std::string* CreateCollectionRequest::mutable_col() {
  
  // @@protoc_insertion_point(field_mutable:ric.store.CreateCollectionRequest.col)
  return col_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CreateCollectionRequest::release_col() {
  // @@protoc_insertion_point(field_release:ric.store.CreateCollectionRequest.col)
  
  return col_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CreateCollectionRequest::set_allocated_col(::std::string* col) {
  if (col != nullptr) {
    
  } else {
    
  }
  col_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), col);
  // @@protoc_insertion_point(field_set_allocated:ric.store.CreateCollectionRequest.col)
}

// uint64 size = 3;
inline void CreateCollectionRequest::clear_size() {
  size_ = PROTOBUF_ULONGLONG(0);
}
inline ::google::protobuf::uint64 CreateCollectionRequest::size() const {
  // @@protoc_insertion_point(field_get:ric.store.CreateCollectionRequest.size)
  return size_;
}
inline void CreateCollectionRequest::set_size(::google::protobuf::uint64 value) {
  
  size_ = value;
  // @@protoc_insertion_point(field_set:ric.store.CreateCollectionRequest.size)
}

// .ric.store.Mode mode = 4;
inline void CreateCollectionRequest::clear_mode() {
  mode_ = 0;
}
inline ::ric::store::Mode CreateCollectionRequest::mode() const {
  // @@protoc_insertion_point(field_get:ric.store.CreateCollectionRequest.mode)
  return static_cast< ::ric::store::Mode >(mode_);
}
inline void CreateCollectionRequest::set_mode(::ric::store::Mode value) {
  
  mode_ = value;
  // @@protoc_insertion_point(field_set:ric.store.CreateCollectionRequest.mode)
}

// -------------------------------------------------------------------

// RemoveCollectionRequest

// string db = 1;
inline void RemoveCollectionRequest::clear_db() {
  db_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RemoveCollectionRequest::db() const {
  // @@protoc_insertion_point(field_get:ric.store.RemoveCollectionRequest.db)
  return db_.GetNoArena();
}
inline void RemoveCollectionRequest::set_db(const ::std::string& value) {
  
  db_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ric.store.RemoveCollectionRequest.db)
}
#if LANG_CXX11
inline void RemoveCollectionRequest::set_db(::std::string&& value) {
  
  db_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ric.store.RemoveCollectionRequest.db)
}
#endif
inline void RemoveCollectionRequest::set_db(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  db_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ric.store.RemoveCollectionRequest.db)
}
inline void RemoveCollectionRequest::set_db(const char* value, size_t size) {
  
  db_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ric.store.RemoveCollectionRequest.db)
}
inline ::std::string* RemoveCollectionRequest::mutable_db() {
  
  // @@protoc_insertion_point(field_mutable:ric.store.RemoveCollectionRequest.db)
  return db_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RemoveCollectionRequest::release_db() {
  // @@protoc_insertion_point(field_release:ric.store.RemoveCollectionRequest.db)
  
  return db_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RemoveCollectionRequest::set_allocated_db(::std::string* db) {
  if (db != nullptr) {
    
  } else {
    
  }
  db_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), db);
  // @@protoc_insertion_point(field_set_allocated:ric.store.RemoveCollectionRequest.db)
}

// string col = 2;
inline void RemoveCollectionRequest::clear_col() {
  col_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RemoveCollectionRequest::col() const {
  // @@protoc_insertion_point(field_get:ric.store.RemoveCollectionRequest.col)
  return col_.GetNoArena();
}
inline void RemoveCollectionRequest::set_col(const ::std::string& value) {
  
  col_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ric.store.RemoveCollectionRequest.col)
}
#if LANG_CXX11
inline void RemoveCollectionRequest::set_col(::std::string&& value) {
  
  col_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ric.store.RemoveCollectionRequest.col)
}
#endif
inline void RemoveCollectionRequest::set_col(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  col_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ric.store.RemoveCollectionRequest.col)
}
inline void RemoveCollectionRequest::set_col(const char* value, size_t size) {
  
  col_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ric.store.RemoveCollectionRequest.col)
}
inline ::std::string* RemoveCollectionRequest::mutable_col() {
  
  // @@protoc_insertion_point(field_mutable:ric.store.RemoveCollectionRequest.col)
  return col_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RemoveCollectionRequest::release_col() {
  // @@protoc_insertion_point(field_release:ric.store.RemoveCollectionRequest.col)
  
  return col_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RemoveCollectionRequest::set_allocated_col(::std::string* col) {
  if (col != nullptr) {
    
  } else {
    
  }
  col_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), col);
  // @@protoc_insertion_point(field_set_allocated:ric.store.RemoveCollectionRequest.col)
}

// -------------------------------------------------------------------

// CreateDatabaseRequest

// string db = 1;
inline void CreateDatabaseRequest::clear_db() {
  db_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CreateDatabaseRequest::db() const {
  // @@protoc_insertion_point(field_get:ric.store.CreateDatabaseRequest.db)
  return db_.GetNoArena();
}
inline void CreateDatabaseRequest::set_db(const ::std::string& value) {
  
  db_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ric.store.CreateDatabaseRequest.db)
}
#if LANG_CXX11
inline void CreateDatabaseRequest::set_db(::std::string&& value) {
  
  db_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ric.store.CreateDatabaseRequest.db)
}
#endif
inline void CreateDatabaseRequest::set_db(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  db_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ric.store.CreateDatabaseRequest.db)
}
inline void CreateDatabaseRequest::set_db(const char* value, size_t size) {
  
  db_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ric.store.CreateDatabaseRequest.db)
}
inline ::std::string* CreateDatabaseRequest::mutable_db() {
  
  // @@protoc_insertion_point(field_mutable:ric.store.CreateDatabaseRequest.db)
  return db_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CreateDatabaseRequest::release_db() {
  // @@protoc_insertion_point(field_release:ric.store.CreateDatabaseRequest.db)
  
  return db_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CreateDatabaseRequest::set_allocated_db(::std::string* db) {
  if (db != nullptr) {
    
  } else {
    
  }
  db_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), db);
  // @@protoc_insertion_point(field_set_allocated:ric.store.CreateDatabaseRequest.db)
}

// -------------------------------------------------------------------

// RemoveDatabaseRequest

// string db = 1;
inline void RemoveDatabaseRequest::clear_db() {
  db_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RemoveDatabaseRequest::db() const {
  // @@protoc_insertion_point(field_get:ric.store.RemoveDatabaseRequest.db)
  return db_.GetNoArena();
}
inline void RemoveDatabaseRequest::set_db(const ::std::string& value) {
  
  db_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ric.store.RemoveDatabaseRequest.db)
}
#if LANG_CXX11
inline void RemoveDatabaseRequest::set_db(::std::string&& value) {
  
  db_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ric.store.RemoveDatabaseRequest.db)
}
#endif
inline void RemoveDatabaseRequest::set_db(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  db_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ric.store.RemoveDatabaseRequest.db)
}
inline void RemoveDatabaseRequest::set_db(const char* value, size_t size) {
  
  db_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ric.store.RemoveDatabaseRequest.db)
}
inline ::std::string* RemoveDatabaseRequest::mutable_db() {
  
  // @@protoc_insertion_point(field_mutable:ric.store.RemoveDatabaseRequest.db)
  return db_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RemoveDatabaseRequest::release_db() {
  // @@protoc_insertion_point(field_release:ric.store.RemoveDatabaseRequest.db)
  
  return db_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RemoveDatabaseRequest::set_allocated_db(::std::string* db) {
  if (db != nullptr) {
    
  } else {
    
  }
  db_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), db);
  // @@protoc_insertion_point(field_set_allocated:ric.store.RemoveDatabaseRequest.db)
}

// -------------------------------------------------------------------

// StatusRequest

// string db = 1;
inline void StatusRequest::clear_db() {
  db_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& StatusRequest::db() const {
  // @@protoc_insertion_point(field_get:ric.store.StatusRequest.db)
  return db_.GetNoArena();
}
inline void StatusRequest::set_db(const ::std::string& value) {
  
  db_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ric.store.StatusRequest.db)
}
#if LANG_CXX11
inline void StatusRequest::set_db(::std::string&& value) {
  
  db_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ric.store.StatusRequest.db)
}
#endif
inline void StatusRequest::set_db(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  db_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ric.store.StatusRequest.db)
}
inline void StatusRequest::set_db(const char* value, size_t size) {
  
  db_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ric.store.StatusRequest.db)
}
inline ::std::string* StatusRequest::mutable_db() {
  
  // @@protoc_insertion_point(field_mutable:ric.store.StatusRequest.db)
  return db_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StatusRequest::release_db() {
  // @@protoc_insertion_point(field_release:ric.store.StatusRequest.db)
  
  return db_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StatusRequest::set_allocated_db(::std::string* db) {
  if (db != nullptr) {
    
  } else {
    
  }
  db_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), db);
  // @@protoc_insertion_point(field_set_allocated:ric.store.StatusRequest.db)
}

// string col = 2;
inline void StatusRequest::clear_col() {
  col_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& StatusRequest::col() const {
  // @@protoc_insertion_point(field_get:ric.store.StatusRequest.col)
  return col_.GetNoArena();
}
inline void StatusRequest::set_col(const ::std::string& value) {
  
  col_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ric.store.StatusRequest.col)
}
#if LANG_CXX11
inline void StatusRequest::set_col(::std::string&& value) {
  
  col_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ric.store.StatusRequest.col)
}
#endif
inline void StatusRequest::set_col(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  col_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ric.store.StatusRequest.col)
}
inline void StatusRequest::set_col(const char* value, size_t size) {
  
  col_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ric.store.StatusRequest.col)
}
inline ::std::string* StatusRequest::mutable_col() {
  
  // @@protoc_insertion_point(field_mutable:ric.store.StatusRequest.col)
  return col_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StatusRequest::release_col() {
  // @@protoc_insertion_point(field_release:ric.store.StatusRequest.col)
  
  return col_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StatusRequest::set_allocated_col(::std::string* col) {
  if (col != nullptr) {
    
  } else {
    
  }
  col_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), col);
  // @@protoc_insertion_point(field_set_allocated:ric.store.StatusRequest.col)
}

// -------------------------------------------------------------------

// StatusResponse

// uint64 min_ts = 1;
inline void StatusResponse::clear_min_ts() {
  min_ts_ = PROTOBUF_ULONGLONG(0);
}
inline ::google::protobuf::uint64 StatusResponse::min_ts() const {
  // @@protoc_insertion_point(field_get:ric.store.StatusResponse.min_ts)
  return min_ts_;
}
inline void StatusResponse::set_min_ts(::google::protobuf::uint64 value) {
  
  min_ts_ = value;
  // @@protoc_insertion_point(field_set:ric.store.StatusResponse.min_ts)
}

// uint64 max_ts = 2;
inline void StatusResponse::clear_max_ts() {
  max_ts_ = PROTOBUF_ULONGLONG(0);
}
inline ::google::protobuf::uint64 StatusResponse::max_ts() const {
  // @@protoc_insertion_point(field_get:ric.store.StatusResponse.max_ts)
  return max_ts_;
}
inline void StatusResponse::set_max_ts(::google::protobuf::uint64 value) {
  
  max_ts_ = value;
  // @@protoc_insertion_point(field_set:ric.store.StatusResponse.max_ts)
}

// uint64 count = 3;
inline void StatusResponse::clear_count() {
  count_ = PROTOBUF_ULONGLONG(0);
}
inline ::google::protobuf::uint64 StatusResponse::count() const {
  // @@protoc_insertion_point(field_get:ric.store.StatusResponse.count)
  return count_;
}
inline void StatusResponse::set_count(::google::protobuf::uint64 value) {
  
  count_ = value;
  // @@protoc_insertion_point(field_set:ric.store.StatusResponse.count)
}

// uint64 size = 4;
inline void StatusResponse::clear_size() {
  size_ = PROTOBUF_ULONGLONG(0);
}
inline ::google::protobuf::uint64 StatusResponse::size() const {
  // @@protoc_insertion_point(field_get:ric.store.StatusResponse.size)
  return size_;
}
inline void StatusResponse::set_size(::google::protobuf::uint64 value) {
  
  size_ = value;
  // @@protoc_insertion_point(field_set:ric.store.StatusResponse.size)
}

// uint64 max_size = 5;
inline void StatusResponse::clear_max_size() {
  max_size_ = PROTOBUF_ULONGLONG(0);
}
inline ::google::protobuf::uint64 StatusResponse::max_size() const {
  // @@protoc_insertion_point(field_get:ric.store.StatusResponse.max_size)
  return max_size_;
}
inline void StatusResponse::set_max_size(::google::protobuf::uint64 value) {
  
  max_size_ = value;
  // @@protoc_insertion_point(field_set:ric.store.StatusResponse.max_size)
}

// .ric.store.Mode mode = 6;
inline void StatusResponse::clear_mode() {
  mode_ = 0;
}
inline ::ric::store::Mode StatusResponse::mode() const {
  // @@protoc_insertion_point(field_get:ric.store.StatusResponse.mode)
  return static_cast< ::ric::store::Mode >(mode_);
}
inline void StatusResponse::set_mode(::ric::store::Mode value) {
  
  mode_ = value;
  // @@protoc_insertion_point(field_set:ric.store.StatusResponse.mode)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace store
}  // namespace ric

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::ric::store::Mode> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ric::store::Mode>() {
  return ::ric::store::Mode_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // PROTOBUF_INCLUDED_ric_2dstore_2fricstore_2eproto
