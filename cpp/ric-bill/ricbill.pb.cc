// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ric-bill/ricbill.proto

#include "ric-bill/ricbill.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

namespace ric {
namespace bill {
class PaymentRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PaymentRequest> _instance;
} _PaymentRequest_default_instance_;
class PaymentResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PaymentResponse> _instance;
} _PaymentResponse_default_instance_;
}  // namespace bill
}  // namespace ric
static void InitDefaultsPaymentRequest_ric_2dbill_2fricbill_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ric::bill::_PaymentRequest_default_instance_;
    new (ptr) ::ric::bill::PaymentRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ric::bill::PaymentRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_PaymentRequest_ric_2dbill_2fricbill_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPaymentRequest_ric_2dbill_2fricbill_2eproto}, {}};

static void InitDefaultsPaymentResponse_ric_2dbill_2fricbill_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ric::bill::_PaymentResponse_default_instance_;
    new (ptr) ::ric::bill::PaymentResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ric::bill::PaymentResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_PaymentResponse_ric_2dbill_2fricbill_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPaymentResponse_ric_2dbill_2fricbill_2eproto}, {}};

void InitDefaults_ric_2dbill_2fricbill_2eproto() {
  ::google::protobuf::internal::InitSCC(&scc_info_PaymentRequest_ric_2dbill_2fricbill_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PaymentResponse_ric_2dbill_2fricbill_2eproto.base);
}

::google::protobuf::Metadata file_level_metadata_ric_2dbill_2fricbill_2eproto[2];
constexpr ::google::protobuf::EnumDescriptor const** file_level_enum_descriptors_ric_2dbill_2fricbill_2eproto = nullptr;
constexpr ::google::protobuf::ServiceDescriptor const** file_level_service_descriptors_ric_2dbill_2fricbill_2eproto = nullptr;

const ::google::protobuf::uint32 TableStruct_ric_2dbill_2fricbill_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ric::bill::PaymentRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ric::bill::PaymentResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
};
static const ::google::protobuf::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::ric::bill::PaymentRequest)},
  { 5, -1, sizeof(::ric::bill::PaymentResponse)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::ric::bill::_PaymentRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ric::bill::_PaymentResponse_default_instance_),
};

::google::protobuf::internal::AssignDescriptorsTable assign_descriptors_table_ric_2dbill_2fricbill_2eproto = {
  {}, AddDescriptors_ric_2dbill_2fricbill_2eproto, "ric-bill/ricbill.proto", schemas,
  file_default_instances, TableStruct_ric_2dbill_2fricbill_2eproto::offsets,
  file_level_metadata_ric_2dbill_2fricbill_2eproto, 2, file_level_enum_descriptors_ric_2dbill_2fricbill_2eproto, file_level_service_descriptors_ric_2dbill_2fricbill_2eproto,
};

const char descriptor_table_protodef_ric_2dbill_2fricbill_2eproto[] =
  "\n\026ric-bill/ricbill.proto\022\010ric.bill\"\020\n\016Pa"
  "ymentRequest\"\021\n\017PaymentResponse2O\n\007Billi"
  "ng\022D\n\rCreatePayment\022\030.ric.bill.PaymentRe"
  "quest\032\031.ric.bill.PaymentResponseB\tZ\007ricb"
  "illb\006proto3"
  ;
::google::protobuf::internal::DescriptorTable descriptor_table_ric_2dbill_2fricbill_2eproto = {
  false, InitDefaults_ric_2dbill_2fricbill_2eproto, 
  descriptor_table_protodef_ric_2dbill_2fricbill_2eproto,
  "ric-bill/ricbill.proto", &assign_descriptors_table_ric_2dbill_2fricbill_2eproto, 171,
};

void AddDescriptors_ric_2dbill_2fricbill_2eproto() {
  static constexpr ::google::protobuf::internal::InitFunc deps[1] =
  {
  };
 ::google::protobuf::internal::AddDescriptors(&descriptor_table_ric_2dbill_2fricbill_2eproto, deps, 0);
}

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_ric_2dbill_2fricbill_2eproto = []() { AddDescriptors_ric_2dbill_2fricbill_2eproto(); return true; }();
namespace ric {
namespace bill {

// ===================================================================

void PaymentRequest::InitAsDefaultInstance() {
}
class PaymentRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PaymentRequest::PaymentRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ric.bill.PaymentRequest)
}
PaymentRequest::PaymentRequest(const PaymentRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ric.bill.PaymentRequest)
}

void PaymentRequest::SharedCtor() {
}

PaymentRequest::~PaymentRequest() {
  // @@protoc_insertion_point(destructor:ric.bill.PaymentRequest)
  SharedDtor();
}

void PaymentRequest::SharedDtor() {
}

void PaymentRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PaymentRequest& PaymentRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_PaymentRequest_ric_2dbill_2fricbill_2eproto.base);
  return *internal_default_instance();
}


void PaymentRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ric.bill.PaymentRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* PaymentRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<PaymentRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      default: {
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool PaymentRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ric.bill.PaymentRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:ric.bill.PaymentRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ric.bill.PaymentRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void PaymentRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ric.bill.PaymentRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ric.bill.PaymentRequest)
}

::google::protobuf::uint8* PaymentRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ric.bill.PaymentRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ric.bill.PaymentRequest)
  return target;
}

size_t PaymentRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ric.bill.PaymentRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PaymentRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ric.bill.PaymentRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const PaymentRequest* source =
      ::google::protobuf::DynamicCastToGenerated<PaymentRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ric.bill.PaymentRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ric.bill.PaymentRequest)
    MergeFrom(*source);
  }
}

void PaymentRequest::MergeFrom(const PaymentRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ric.bill.PaymentRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void PaymentRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ric.bill.PaymentRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PaymentRequest::CopyFrom(const PaymentRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ric.bill.PaymentRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PaymentRequest::IsInitialized() const {
  return true;
}

void PaymentRequest::Swap(PaymentRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PaymentRequest::InternalSwap(PaymentRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PaymentRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_ric_2dbill_2fricbill_2eproto);
  return ::file_level_metadata_ric_2dbill_2fricbill_2eproto[kIndexInFileMessages];
}


// ===================================================================

void PaymentResponse::InitAsDefaultInstance() {
}
class PaymentResponse::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PaymentResponse::PaymentResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ric.bill.PaymentResponse)
}
PaymentResponse::PaymentResponse(const PaymentResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ric.bill.PaymentResponse)
}

void PaymentResponse::SharedCtor() {
}

PaymentResponse::~PaymentResponse() {
  // @@protoc_insertion_point(destructor:ric.bill.PaymentResponse)
  SharedDtor();
}

void PaymentResponse::SharedDtor() {
}

void PaymentResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PaymentResponse& PaymentResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_PaymentResponse_ric_2dbill_2fricbill_2eproto.base);
  return *internal_default_instance();
}


void PaymentResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ric.bill.PaymentResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* PaymentResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<PaymentResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      default: {
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool PaymentResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ric.bill.PaymentResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:ric.bill.PaymentResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ric.bill.PaymentResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void PaymentResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ric.bill.PaymentResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ric.bill.PaymentResponse)
}

::google::protobuf::uint8* PaymentResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ric.bill.PaymentResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ric.bill.PaymentResponse)
  return target;
}

size_t PaymentResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ric.bill.PaymentResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PaymentResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ric.bill.PaymentResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const PaymentResponse* source =
      ::google::protobuf::DynamicCastToGenerated<PaymentResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ric.bill.PaymentResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ric.bill.PaymentResponse)
    MergeFrom(*source);
  }
}

void PaymentResponse::MergeFrom(const PaymentResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ric.bill.PaymentResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void PaymentResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ric.bill.PaymentResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PaymentResponse::CopyFrom(const PaymentResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ric.bill.PaymentResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PaymentResponse::IsInitialized() const {
  return true;
}

void PaymentResponse::Swap(PaymentResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PaymentResponse::InternalSwap(PaymentResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PaymentResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_ric_2dbill_2fricbill_2eproto);
  return ::file_level_metadata_ric_2dbill_2fricbill_2eproto[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace bill
}  // namespace ric
namespace google {
namespace protobuf {
template<> PROTOBUF_NOINLINE ::ric::bill::PaymentRequest* Arena::CreateMaybeMessage< ::ric::bill::PaymentRequest >(Arena* arena) {
  return Arena::CreateInternal< ::ric::bill::PaymentRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ric::bill::PaymentResponse* Arena::CreateMaybeMessage< ::ric::bill::PaymentResponse >(Arena* arena) {
  return Arena::CreateInternal< ::ric::bill::PaymentResponse >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
